<Window x:Name="window" x:Class="ActiproSoftware.ProductSamples.ThemesSamples.QuickStart.WindowChromeApplicationMenuOverlay.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
    xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	Title="WindowChrome Application Menu Overlay"
	Width="800" Height="600" 
	MinWidth="500" MinHeight="300"
	WindowStartupLocation="CenterScreen"
	Icon="/Images/Icons/Actipro.ico"
	TextOptions.TextFormattingMode="Display"
	themes:WindowChrome.UseAlternateTitleBarStyle="{Binding RelativeSource={RelativeSource Self}, Path=(themes:WindowChrome.IsOverlayVisible)}"
	themes:WindowChrome.OverlayAnimationKinds="FadeSlide"
    >
	<Window.Resources>
		
		<shared:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<shared:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" IsInverted="True" />
		<shared:ThicknessConverter x:Key="ThicknessConverter" />
		
		<Style x:Key="OverlayButtonStyle" TargetType="ButtonBase">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemForegroundNormalBrushKey}}" />
			<Setter Property="Padding" Value="44,12,20,12" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ButtonBase">
						<Grid>
							<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
								<ContentPresenter />
							</Border>

							<Rectangle x:Name="PART_SelectionElement" Margin="4" Width="2"
									   Fill="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageHeaderSeparatorBorderNormalBrushKey}}" 
									   HorizontalAlignment="Left" Visibility="Hidden" />
						</Grid>
						
						<ControlTemplate.Triggers>
							<Trigger Property="ToggleButton.IsChecked" Value="True">
								<Setter TargetName="PART_SelectionElement" Property="Visibility" Value="Visible" />
								<Setter TargetName="PART_SelectionElement" Property="Fill" Value="{DynamicResource {x:Static themes:AssetResourceKeys.RibbonTabItemBorderSelectedBrushKey}}" />
								<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemBackgroundSelectedBrushKey}}" />
								<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemForegroundSelectedBrushKey}}" />
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemBackgroundHoverBrushKey}}" />
								<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemForegroundHoverBrushKey}}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="PART_SelectionElement" Property="Visibility" Value="Visible" />
								<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemBackgroundHoverBrushKey}}" />
								<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemForegroundHoverBrushKey}}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemBackgroundHoverBrushKey}}" />
								<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemForegroundHoverBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
	</Window.Resources>
	
	<Window.CommandBindings>
		<CommandBinding Command="ApplicationCommands.Help" Executed="OnHelpCommandExecuted" />
	</Window.CommandBindings>
	
	<themes:WindowChrome.Chrome>
		
		<!--
			A single WindowChrome instance can be used in multiple Windows, but this sample defines the WindowChrome inline
		-->
		<themes:WindowChrome x:Name="chrome" HasIcon="False" TitleBarHeaderAlignment="Center" TitleBarLeftContentMaxWidthOverflowPercentage="0.4" 
							 IsOverlayVisibleChanged="OnIsOverlayVisibleChanged" />

	</themes:WindowChrome.Chrome>
	
	<!-- Menu/Back buttons on the title bar's left side  -->
	<themes:WindowChrome.TitleBarLeftContent>
		<shared:AutoCollapseStackPanel>
			<Button x:Name="backButton" Margin="0,0,100,0" Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}" 
					themes:ThemeProperties.IsActive="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=(themes:ThemeProperties.IsActive)}"
					ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBackGlyphTemplateKey}}"
					Command="{x:Static themes:WindowChrome.ToggleIsOverlayVisibleCommand}"
					Visibility="{Binding ElementName=window, Path=(themes:WindowChrome.IsOverlayVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
					themes:ThemeProperties.UseAlternateStyle="{Binding ElementName=window, Path=(themes:WindowChrome.IsOverlayVisible)}"
					/>
			<Button x:Name="menuButton" Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}" 
					themes:ThemeProperties.IsActive="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=(themes:ThemeProperties.IsActive)}"
					ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonMenuBarsGlyphTemplateKey}}"
					Command="{x:Static themes:WindowChrome.ToggleIsOverlayVisibleCommand}"
					ToolTip="Menu"
					Visibility="{Binding ElementName=window, Path=(themes:WindowChrome.IsOverlayVisible), Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
					/>
		</shared:AutoCollapseStackPanel>
	</themes:WindowChrome.TitleBarLeftContent>
	
	<!-- Help button on the title bar's right side  -->
	<themes:WindowChrome.TitleBarRightContent>
		<shared:AutoCollapseStackPanel>
			<Button x:Name="helpButton" Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}" 
					themes:ThemeProperties.IsActive="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=(themes:ThemeProperties.IsActive)}"
					ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonHelpGlyphTemplateKey}}"
					Command="ApplicationCommands.Help"
					ToolTip="Help"
					themes:ThemeProperties.UseAlternateStyle="{Binding ElementName=window, Path=(themes:WindowChrome.IsOverlayVisible)}"
					/>
		</shared:AutoCollapseStackPanel>
	</themes:WindowChrome.TitleBarRightContent>
	
	<!-- Overlay -->
	<themes:WindowChrome.OverlayContent>
		<Grid Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="140" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			
			<ScrollViewer Grid.Column="1" Margin="{Binding ElementName=window, Path=(themes:WindowChrome.TitleBarHeight), Converter={StaticResource ThicknessConverter}, ConverterParameter='Top'}" 
						  VerticalScrollBarVisibility="Auto" Focusable="False">
				<StackPanel Margin="50">
					<TextBlock Text="This user interface is on a WindowChrome overlay, which can mimic app home screens or Office-like Backstage, and supports several kinds of overlay animations." TextWrapping="Wrap" />
					
					<TextBlock Margin="0,30,0,0" Text="Overlay animation kinds:" TextWrapping="Wrap" />
					<editors:EnumEditBox Margin="0,3,0,0" Value="{Binding ElementName=window, Path=(themes:WindowChrome.OverlayAnimationKinds)}" />
				</StackPanel>
			</ScrollViewer>
			
			<Border Background="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabControlHeaderBackgroundNormalBrushKey}}">
				<Grid Margin="0,40,0,20">
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					
					<!-- Here we use a button that isn't focusable to look like a selected tab... normally you'd manage the checked states of all the buttons
							in this area so that one is ever checked, but since there is only one "tab" in this sample we make it so it can't be clicked -->
					<StackPanel>
						<ToggleButton Style="{StaticResource OverlayButtonStyle}" Padding="20,32" IsTabStop="False" Focusable="False" IsHitTestVisible="False" IsChecked="True">
							<StackPanel>
								<Canvas Width="30" Height="30" HorizontalAlignment="Center">
									<Path StrokeThickness="1" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemForegroundNormalBrushKey}}" Opacity="0.8"
										  Data="M 1,16 L 15,3 L 29,16  M 3.5,13.5 L 3.5,28.5 L 11.5,28.5 L 11.5,17.5 L 18.5,17.5 L 18.5,28.5 L 26.5,28.5 L 26.5,13.5"  />
								</Canvas>
								<TextBlock Margin="0,10,0,0" Text="Home" FontSize="16" TextAlignment="Center" />
							</StackPanel>
						</ToggleButton>
					</StackPanel>
					
					<!-- These are a couple regular buttons -->
					<StackPanel Grid.Row="1">
						<Button Style="{StaticResource OverlayButtonStyle}" Content="Help" Command="ApplicationCommands.Help" />
						<Button Style="{StaticResource OverlayButtonStyle}" Content="Exit" Command="{x:Static themes:WindowChrome.CloseCommand}" />
					</StackPanel>
				</Grid>
			</Border>
		</Grid>
	</themes:WindowChrome.OverlayContent>
	
	<!-- Main window content -->
	<Grid Visibility="{Binding ElementName=window, Path=(themes:WindowChrome.IsOverlayVisible), Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
		<sampleBrowser:RichTextBox x:Name="editor" Margin="7" DocumentUri="/ProductSamples/ThemesSamples/QuickStart/WindowChromeApplicationMenuOverlay/OverviewDocument.xaml" />
	</Grid>
	
</Window>
