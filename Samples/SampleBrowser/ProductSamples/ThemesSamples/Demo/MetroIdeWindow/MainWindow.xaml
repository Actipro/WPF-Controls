<Window 
	x:Name="window" 
	x:Class="ActiproSoftware.ProductSamples.ThemesSamples.QuickStart.MetroIdeWindow.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	Title="Metro IDE Window"
	Width="800" Height="600" 
	WindowStartupLocation="CenterScreen"
	ResizeMode="CanResizeWithGrip"
	FocusManager.FocusedElement="{Binding ElementName=editor}"
	Icon="/Images/Icons/Actipro.ico"
	TextOptions.TextFormattingMode="Display"
    >
	<Window.Resources>

		<!-- Converters -->		
		<shared:PercentageConverter x:Key="PercentageConverter" />
		<shared:ImageConverter x:Key="ImageConverter" UriPrefix="pack://application:,,,/SampleBrowser;component/Images/Icons/" />
		
	</Window.Resources>
	
	<themes:WindowChrome.Chrome>
		
		<!-- This WindowChrome updates a Window with modern custom chrome features... custom-sized icons can even be used -->
		<themes:WindowChrome x:Name="chrome" TitleBarHeaderAlignment="Center" IconMargin="10,4,10,4">
			
			<themes:WindowChrome.TitleBarLeftContentTemplate>
				<DataTemplate>
					<!-- Menu in title bar -->
					<shared:TitleBarMenu Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}">
						<MenuItem Header="_FILE">
							<MenuItem Header="Exit" Command="{x:Static themes:WindowChrome.CloseCommand}" />
						</MenuItem>
						<MenuItem Header="_EDIT">
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Undo" />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Redo" />
							<Separator />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Cut" Icon="{Binding Source='Cut16.png', Converter={StaticResource ImageConverter}}" />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.CutAndAppendToClipboard" />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Copy" Icon="{Binding Source='Copy16.png', Converter={StaticResource ImageConverter}}" />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.CopyAndAppendToClipboard" />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Paste" Icon="{Binding Source='Paste16.png', Converter={StaticResource ImageConverter}}" />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Delete" Icon="{Binding Source='Delete16.png', Converter={StaticResource ImageConverter}}" />
							<Separator />
							<MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.SelectAll" />
						</MenuItem>
						<MenuItem Header="_VIEW">
							<MenuItem Header="Line Number Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsLineNumberMarginVisible, Mode=TwoWay}" />
							<MenuItem Header="Ruler Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsRulerMarginVisible, Mode=TwoWay}" />
							<MenuItem Header="Selection Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsSelectionMarginVisible, Mode=TwoWay}" />
							<Separator />
							<MenuItem Header="Whitespace Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsWhitespaceVisible, Mode=TwoWay}" />
						</MenuItem>
					</shared:TitleBarMenu>
				</DataTemplate>
			</themes:WindowChrome.TitleBarLeftContentTemplate>
			
			<themes:WindowChrome.TitleBarRightContentTemplate>
				<DataTemplate>
					<StackPanel Orientation="Horizontal">
						<!-- Inject a Quick Launch textbox and custom title bar button into the title bar -->
						<TextBox Margin="5,2,5,0" Width="100" BorderBrush="Transparent" shared:HintProperties.Hint="Quick Launch" VerticalAlignment="Center" />
						<Button Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}"
							themes:ThemeProperties.IsActive="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=IsActive}"
							ToolTip="Custom TitleBar Button">
							<Button.ContentTemplate>
								<DataTemplate>
									<Canvas Margin="6,0" Width="16" Height="16">
										<Path Canvas.Left="3" Canvas.Top="11" 
											  Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
											  Data="M 0,0 L 2,0 L 2,2 L 0,2 Z M 4,0 L 6,0 L 6,2 L 4,2 Z M 8,0 L 10,0 L 10,2 L 8,2 Z"/>
									</Canvas>
								</DataTemplate>
							</Button.ContentTemplate>
						</Button>
					</StackPanel>
				</DataTemplate>
			</themes:WindowChrome.TitleBarRightContentTemplate>
			
		</themes:WindowChrome>
		
	</themes:WindowChrome.Chrome>
	
	<DockPanel>
		<!-- Toolbar -->
		<shared:PixelSnapper DockPanel.Dock="Top">
			<ToolBarTray>
				<ToolBar>
					<Button CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Cut" ToolTip="Cut" Content="{Binding Source='Cut16.png', Converter={StaticResource ImageConverter}}" />
					<Button CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Copy" ToolTip="Copy" Content="{Binding Source='Copy16.png', Converter={StaticResource ImageConverter}}" />
					<Button CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Paste" ToolTip="Paste" Content="{Binding Source='Paste16.png', Converter={StaticResource ImageConverter}}" />
					<Button CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Delete" ToolTip="Delete" Content="{Binding Source='Delete16.png', Converter={StaticResource ImageConverter}}" />
					<Separator />
					<Button CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Undo" ToolTip="Undo" Content="{Binding Source='Undo16.png', Converter={StaticResource ImageConverter}}" />
					<Button CommandTarget="{Binding ElementName=editor}" Command="ApplicationCommands.Redo" ToolTip="Redo" Content="{Binding Source='Redo16.png', Converter={StaticResource ImageConverter}}" />
					<Separator />
					<Button Content="Change StatusBar State" Click="OnStatusBarColorButtonClick" />
				</ToolBar>
			</ToolBarTray>
		</shared:PixelSnapper>
		
		<!-- Statusbar -->
		<shared:PixelSnapper DockPanel.Dock="Bottom">
			<StatusBar x:Name="statusBar" FocusManager.IsFocusScope="True" Style="{DynamicResource {x:Static themes:SharedResourceKeys.StatusBarStyleKey}}">
				<StatusBar.ItemsPanel>
					<ItemsPanelTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" MinWidth="150" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
						</Grid>
					</ItemsPanelTemplate>
				</StatusBar.ItemsPanel>
				
				<StatusBarItem x:Name="messagePanel" Content="Ready" />
				
				<StatusBarItem x:Name="tokenPanel" Grid.Column="1" Margin="7,0,7,0" />
				
				<StatusBarItem Grid.Column="2">
					<StackPanel Orientation="Horizontal">
						<TextBlock x:Name="linePanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Ln 1" />
						<TextBlock x:Name="columnPanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Col 1" />
						<TextBlock x:Name="characterPanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Ch 1" />
					</StackPanel>
				</StatusBarItem>
				
				<StatusBarItem x:Name="overwriteModePanel" Grid.Column="3" Margin="7,0,7,0" Content="INS" />
				
				<StatusBarItem Grid.Column="4">
					<StackPanel Margin="0,0,16,0" Orientation="Horizontal">
						<Slider x:Name="scaleSlider" Width="80" Value="1.0" Minimum="0.5" Maximum="3.0" LargeChange="0.5" SmallChange="0.1" VerticalAlignment="Center" 
							IsSnapToTickEnabled="True" TickFrequency="0.1" 
							Style="{DynamicResource {x:Static themes:SharedResourceKeys.StatusBarEmbeddedSliderStyleKey}}" />
						<TextBlock Margin="3,0,0,0" Text="{Binding ElementName=scaleSlider, Path=Value, Converter={StaticResource PercentageConverter}, ConverterParameter=%}" VerticalAlignment="Center" />
					</StackPanel>
				</StatusBarItem>
			</StatusBar>
		</shared:PixelSnapper>
		
		<docking:DockSite>
			<docking:Workspace>
				<docking:TabbedMdiHost>
					<docking:TabbedMdiContainer>
						<docking:DocumentWindow Title="Document1.txt">
							<editor:SyntaxEditor x:Name="editor"
									AreWordWrapGlyphsVisible="True"
									BorderThickness="0"
									IsLineNumberMarginVisible="True"
									ZoomLevel="{Binding ElementName=scaleSlider, Path=Value}"
									IsOverwriteModeActiveChanged="OnSyntaxEditorIsOverwriteModeActiveChanged"
									ViewSelectionChanged="OnSyntaxEditorViewSelectionChanged"
									>
				<editor:EditorDocument xml:space="preserve" FileName="Document1.txt"><![CDATA[This demo shows a sample implementation of a Metro-style Window, similar to Visual Studio.
It harnesses Actipro's Metro theme along with a special WindowChrome class that allows a Window
to render properly in the selected theme.
					
WindowChrome allows any custom content to be placed within the title bar.  This particular sample
has a Menu in the left side of the title bar, the window title is centered, and a Quick Launch 
textbox and custom "..." title bar button are injected into the right side of the title bar.

This demo also shows how the window border and status bar can change color with changes in the 
state of an IDE application.  States could be anything like normal, compiling, running, etc.

Click the 'Change StatusBar State' button above to show off the changing window border and
status bar background color.  Several unique colors are presented.]]></editor:EditorDocument>
							</editor:SyntaxEditor>
						</docking:DocumentWindow>
					</docking:TabbedMdiContainer>
				</docking:TabbedMdiHost>
			</docking:Workspace>
		</docking:DockSite>
	</DockPanel>

</Window>
