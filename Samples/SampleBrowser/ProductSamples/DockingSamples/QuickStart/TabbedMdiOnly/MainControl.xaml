<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.DockingSamples.QuickStart.TabbedMdiOnly.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					This QuickStart shows how you can use a DockSite with a contained
					Workspace and TabbedMdiHost to implement a tabbed MDI (multiple document interface) for an application.
					While this particular sample is focused on MDI only and doesn't include any tool windows, tool windows could easily be added and docked into the layout.
					Tabbed documents have a TabbedMdiLayoutKind property that determines whether they are presented as
					Normal, Pinned, or Preview (right-aligned) tabs.
					<LineBreak /><LineBreak />
					Full support for floating MDI areas is included.
					Drag a document's tab to float it.
					<LineBreak /><LineBreak />
					Command-based window cascade and tile functionality is included out-of-the-box.
					<LineBreak /><LineBreak />
					Use the File/New menu item to add more documents, and try out the various other menu items to change
					capabilities and adjust document layouts.
					<LineBreak /><LineBreak />
					The TabbedMdiHost.EmptyContentTemplate property can be set to a DataTemplate that displays when all documents are closed.
					Close all the documents to see an example of it.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<!-- DockSite -->
		<docking:DockSite x:Name="dockSite" Grid.Row="1" CanDocumentWindowsFloat="True" FloatingWindowTitle="Docking/MDI QuickStart" FloatingWindowIcon="/Images/Icons/Actipro.ico">
			<docking:DockSite.Switcher>
				<docking:StandardSwitcher AreToolWindowsVisible="False" />
			</docking:DockSite.Switcher>

			<!-- Workspace -->
			<docking:Workspace>
				<docking:TabbedMdiHost x:Name="tabbedMdiHost">
					<docking:TabbedMdiHost.EmptyContentTemplate>
						<DataTemplate>
							<TextBlock Margin="30" TextAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center">
								This is an example of using the EmptyContentTemplate property.  Create or open a document to see it in this MDI area.
							</TextBlock>
						</DataTemplate>
					</docking:TabbedMdiHost.EmptyContentTemplate>

					<docking:TabbedMdiContainer>
						<docking:DocumentWindow Title="Document1.txt" Description="Text document" FileName="Document1.txt"
												ImageSource="/Images/Icons/TextDocument16.png" TabbedMdiLayoutKind="Pinned">
							<TextBox BorderThickness="0" Text="The first document, which is initially a 'pinned' tab." TextWrapping="Wrap" />
						</docking:DocumentWindow>

						<docking:DocumentWindow Title="Document2.txt" Description="Text document" FileName="Document2.txt"
												ImageSource="/Images/Icons/TextDocument16.png">
							<TextBox BorderThickness="0" Text="The second document." TextWrapping="Wrap" />
						</docking:DocumentWindow>

						<docking:DocumentWindow x:Name="document3DocumentWindow" IsReadOnly="True"
												Title="Document3.txt" Description="Text document" FileName="Document3.txt"
												ImageSource="/Images/Icons/TextDocument16.png">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<CheckBox Margin="5" Content="Is read-only" IsChecked="{Binding ElementName=document3DocumentWindow, Path=IsReadOnly, Mode=TwoWay}" />
								<TextBox x:Name="document1TextBox" Grid.Row="1" BorderThickness="0" Text="This textbox can be made read-only by checking the box above." TextWrapping="Wrap"
										 IsReadOnly="{Binding ElementName=document3DocumentWindow, Path=IsReadOnly}" />
							</Grid>
						</docking:DocumentWindow>

						<docking:DocumentWindow Title="Document4.txt" Description="Text document" FileName="Document4.txt"
												ImageSource="/Images/Icons/TextDocument16.png" TabbedMdiLayoutKind="Preview">
							<TextBox BorderThickness="0" Text="The fourth document, which is initially a 'preview' tab." TextWrapping="Wrap" />
						</docking:DocumentWindow>
					</docking:TabbedMdiContainer>
				</docking:TabbedMdiHost>
			</docking:Workspace>

		</docking:DockSite>

		<!-- Menu -->
		<shared:PixelSnapper>
			<Menu>
				<MenuItem Header="_File">
					<MenuItem Header="New" Click="OnNewDocumentMenuItemClick" />
					<MenuItem Header="Open..." Click="OnOpenDocumentMenuItemClick" />
				</MenuItem>
				<MenuItem Header="_Options">
					<MenuItem Header="Can Document Windows Close" IsCheckable="True" IsChecked="{Binding ElementName=dockSite, Path=CanDocumentWindowsClose, Mode=TwoWay}" />
					<MenuItem Header="Can Document Windows Float" IsCheckable="True" IsChecked="{Binding ElementName=dockSite, Path=CanDocumentWindowsFloat, Mode=TwoWay}" />
					<MenuItem Header="New Tabs Inserted Before Existing Tabs" IsCheckable="True" IsChecked="{Binding ElementName=dockSite, Path=AreNewTabsInsertedBeforeExistingTabs, Mode=TwoWay}" />
					<Separator />
					<MenuItem Header="Can Documents Attach" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=CanDocumentsAttach, Mode=TwoWay}" />
					<MenuItem Header="Can Documents Close on Middle Click" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=CanDocumentsCloseOnMiddleClick, Mode=TwoWay}" />
					<MenuItem Header="Can Documents Dock" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=CanDocumentsDock, Mode=TwoWay}" />
					<MenuItem Header="Can Document Tabs Drag" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=CanDocumentTabsDrag, Mode=TwoWay}" />
					<MenuItem Header="Has Tab Close Buttons" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=HasTabCloseButtons, Mode=TwoWay}" />
					<MenuItem Header="Has Tab Pin Buttons" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=HasTabPinButtons, Mode=TwoWay}" />
					<MenuItem Header="Has Tab Promote Buttons" IsCheckable="True" IsChecked="{Binding ElementName=tabbedMdiHost, Path=HasTabPromoteButtons, Mode=TwoWay}" />
				</MenuItem>
				<MenuItem Header="_Window">
					<MenuItem Header="Close All Documents" Command="{Binding ElementName=dockSite, Path=CloseAllDocumentsCommand}" />
					<Separator />
					<MenuItem Header="Cascade" Command="{Binding ElementName=dockSite, Path=CascadeDocumentsCommand}" />
					<MenuItem Header="Tile Horizontally" Command="{Binding ElementName=dockSite, Path=TileDocumentsHorizontallyCommand}" />
					<MenuItem Header="Tile Vertically" Command="{Binding ElementName=dockSite, Path=TileDocumentsVerticallyCommand}" />
				</MenuItem>
			</Menu>
		</shared:PixelSnapper>

	</Grid>

</sampleBrowser:ProductItemControl>
