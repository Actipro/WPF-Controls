<sampleBrowser:ProductItemControl x:Class="ActiproSoftware.ProductSamples.DockingSamples.QuickStart.WindowControlIntro.MainControl"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
		xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
		xmlns:gridseditors="http://schemas.actiprosoftware.com/winfx/xaml/gridseditors"
		xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
		xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
		xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
		>

	<sampleBrowser:ProductItemControl.Resources>

		<!-- Converters -->
		<shared:ZoomLevelToTextFormattingModeConverter x:Key="ZoomLevelToTextFormattingModeConverter" />

		<!-- Storyboards -->
		<Storyboard x:Key="SwoopIn" Duration="0:0:1" FillBehavior="Stop">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
				<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" />
			<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].X" From="-300" />
			<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].Y" From="100" />
			<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].ScaleX" From="3" />
			<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].ScaleY" From="3" />
			<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[2].Angle" From="-360" />
		</Storyboard>

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=ResizeMode}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=WindowState}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=CanClose}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasMinimizeButton}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasRestoreButton}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasMaximizeButton}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasCloseButton}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasIcon}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasTitleBar}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=HasDropShadow}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=IsMaximizedFrameVisible}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=window, Path=(themes:ThemeProperties.ZoomLevel)}">
						<gridseditors:DoublePropertyEditor Minimum="1" Maximum="3" SmallChange="0.1" LargeChange="0.5" Format="P0" IsEditable="False" />
					</grids:PropertyModel>
					<grids:PropertyModel>
						<grids:PropertyModel.ValueTemplate>
							<DataTemplate>
								<Button Content="Open and Activate Window" Click="OnOpenWindowButtonClick" HorizontalAlignment="Left" />
							</DataTemplate>
						</grids:PropertyModel.ValueTemplate>
					</grids:PropertyModel>
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
				    The Docking &amp; MDI suite contains the WindowControl control that is a very close drop-in replacement for a standard Window,
				    however since it is a Control instead, it can be used inside any other container.
				    Its properties and events have been designed to match those of the standard WPF Window class.
				    <LineBreak /><LineBreak />
				    This sample shows off many of the control's options that are available.
				    It also shows how contextual content, such as additional title bar buttons, can be added.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<!-- DockSite -->
	<docking:DockSite x:Name="dockSite"
					  MenuOpening="OnDockSiteMenuOpening"
					  >

		<docking:SplitContainer Orientation="Vertical">

			<!-- Workspace -->
			<docking:Workspace>

				<Border Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundMidBrushKey}}">
					<Canvas ClipToBounds="True">
						<docking:WindowControl x:Name="window" Width="400" MinHeight="30" Padding="10" 
										Title="WindowControl Sample"
										Icon="/Images/Icons/Actipro.ico"
										Left="100" Top="150"
										Canvas.Left="{Binding RelativeSource={RelativeSource Self}, Path=Left}"
										Canvas.Top="{Binding RelativeSource={RelativeSource Self}, Path=Top}"
										RenderTransformOrigin="0.5,0.5"
										TextOptions.TextFormattingMode="{Binding ElementName=window, Path=(themes:ThemeProperties.ZoomLevel), Converter={StaticResource ZoomLevelToTextFormattingModeConverter}}"
										ContextContent="{Binding RelativeSource={RelativeSource Self}}"
										Activated="OnWindowActivated" 
										Closed="OnWindowClosed" 
										Closing="OnWindowClosing"
										Deactivated="OnWindowDeactivated" 
										DragMoved="OnWindowDragMoved" 
										DragMoving="OnWindowDragMoving"
										LocationChanged="OnWindowLocationChanged"
										Opened="OnWindowOpened"
										SizeChanged="OnWindowSizeChanged"
										StateChanged="OnWindowStateChanged"
										TitleBarDoubleTapped="OnWindowTitleBarDoubleTapped"								
										TitleBarMenuOpening="OnWindowTitleBarMenuOpening"
										>
							<docking:WindowControl.ContextContentTemplate>
								<DataTemplate>
									<Button Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}"
											themes:ThemeProperties.IsActive="{Binding IsActive}">
										<Grid Width="26" Height="18">
											<TextBlock Text="?" FontWeight="Bold" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" />
										</Grid>
									</Button>
								</DataTemplate>
							</docking:WindowControl.ContextContentTemplate>
							<docking:WindowControl.RenderTransform>
								<TransformGroup>
									<TranslateTransform />
									<ScaleTransform ScaleX="{Binding ElementName=window, Path=(themes:ThemeProperties.ZoomLevel)}" ScaleY="{Binding ElementName=window, Path=(themes:ThemeProperties.ZoomLevel)}" />
									<RotateTransform />
								</TransformGroup>
							</docking:WindowControl.RenderTransform>
							<docking:WindowControl.Triggers>
								<EventTrigger RoutedEvent="Control.Loaded">
									<BeginStoryboard Storyboard="{StaticResource SwoopIn}" />
								</EventTrigger>
							</docking:WindowControl.Triggers>

							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<TextBlock>A simple TextBox:</TextBlock>
								<TextBox Grid.Row="1" Margin="0,3,0,0" Text="This TextBox is in a WindowControl." AcceptsReturn="True" TextWrapping="Wrap" />
							</Grid>
						</docking:WindowControl>
					</Canvas>
				</Border>

			</docking:Workspace>

			<docking:ToolWindowContainer>
				<docking:ToolWindow x:Name="outputToolWindow" Title="Output" ContainerDockedSize="200,150">
					<ListBox x:Name="eventsListBox" BorderThickness="0" />
				</docking:ToolWindow>
			</docking:ToolWindowContainer>

		</docking:SplitContainer>

	</docking:DockSite>

</sampleBrowser:ProductItemControl>
