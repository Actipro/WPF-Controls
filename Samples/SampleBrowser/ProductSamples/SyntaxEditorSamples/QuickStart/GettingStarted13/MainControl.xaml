<UserControl x:Class="ActiproSoftware.ProductSamples.SyntaxEditorSamples.QuickStart.GettingStarted13.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor"
    xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.SyntaxEditorSamples.QuickStart.GettingStarted13"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    >

	<docking:DockSite>
			
		<docking:SplitContainer Orientation="Vertical">
			
			<docking:Workspace>
				
				<DockPanel>
					<ToolBarTray Margin="0,0,0,5" DockPanel.Dock="Top">
						<ToolBar>
							<Button Command="editor:EditorCommands.CommentLines" ToolTip="Comment out the selected lines" CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/CommentLines16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Button Command="editor:EditorCommands.UncommentLines" ToolTip="Uncomment the selected lines" CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/UncommentLines16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Separator />
							<Button Command="editor:EditorCommands.RequestIntelliPromptCompletionSession" ToolTip="Display completion list" CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/IntelliPromptCompletion16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Button Command="editor:EditorCommands.RequestIntelliPromptParameterInfoSession" ToolTip="Display parameter info" CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/IntelliPromptParameterInfo16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Button Command="editor:EditorCommands.RequestIntelliPromptQuickInfoSession" ToolTip="Display quick info" CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/IntelliPromptQuickInfo16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Button Command="editor:EditorCommands.RequestIntelliPromptAutoComplete" ToolTip="Display word completion" CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/IntelliPromptAutoComplete16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Separator />
							<Button Command="editor:EditorCommands.FormatDocument" ToolTip="Format document"  CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/FormatDocument16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
							<Button Command="editor:EditorCommands.FormatSelection" ToolTip="Format selection"  CommandTarget="{Binding ElementName=editor}">
								<shared:DynamicImage Source="/Images/Icons/FormatSelection16.png" Width="16" Height="16" Stretch="UniformToFill" />
							</Button>
						</ToolBar>
					</ToolBarTray>
					
					<!-- SyntaxEditor -->
					<editor:SyntaxEditor x:Name="editor" 
										 DocumentParseDataChanged="OnEditorDocumentParseDataChanged"
										 UserInterfaceUpdate="OnEditorUserInterfaceUpdate">
						<editor:EditorDocument xml:space="preserve">
							<editor:EditorDocument.Language>
								<sample:SimpleSyntaxLanguage />
							</editor:EditorDocument.Language><![CDATA[/*
	In this sample we've registered a text formatter service on the language.
	This service loops over the tokens in the snapshot and cleans up the whitespace
	layout to improve readability of the document.
	
	The code below is poorly formatted. Click the Format Document button on the toolbar
	to invoke the text formatter service.
*/function Add(x,y){
	return x+y;}

function Increment(x) 
							{
	return (                 x + 1
							);
}

function IncrementAndMultiply(x, y) {
	var result;
	result = Increment(
		x);
	return 
		result *y;
										}
]]></editor:EditorDocument>

					</editor:SyntaxEditor>					
				</DockPanel>

			</docking:Workspace>

			<docking:ToolWindowContainer>
				<docking:ToolWindow Title="Error List" ImageSource="/Images/Icons/ErrorList16.png" CanClose="False" ContainerDockedSize="200,150">
					<ListView x:Name="errorListView" BorderThickness="0" MouseDoubleClick="OnErrorListViewDoubleClick">
						<ListView.View>
							<GridView>
								<GridViewColumn Header="Line" Width="40" DisplayMemberBinding="{Binding Path=PositionRange.StartPosition.DisplayLine}" />
								<GridViewColumn Header="Char" Width="40" DisplayMemberBinding="{Binding Path=PositionRange.StartPosition.DisplayCharacter}" />
								<GridViewColumn Header="Description" Width="300" DisplayMemberBinding="{Binding Path=Description}" />
							</GridView>
						</ListView.View>
					</ListView>
				</docking:ToolWindow>
			</docking:ToolWindowContainer>
		</docking:SplitContainer>
				
	</docking:DockSite>

</UserControl>
