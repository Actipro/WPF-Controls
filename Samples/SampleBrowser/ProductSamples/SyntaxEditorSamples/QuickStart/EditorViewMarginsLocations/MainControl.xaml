<UserControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor" 
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared" 
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes" 
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.SyntaxEditorSamples.QuickStart.EditorViewMarginsLocations"
    >
    <UserControl.Resources>

		<!-- sample:CustomMargin Style -->
		<Style x:Key="{x:Type sample:CustomMargin}" TargetType="{x:Type sample:CustomMargin}">
			<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundLowBrushKey}}" />
			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderLowBrushKey}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type sample:CustomMargin}">

						<Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True">
								<shared:PixelSnapper>
									<StackPanel x:Name="label" Margin="3" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
										<TextBlock Text="Margin placement: " />
										<TextBlock FontWeight="Bold" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Placement}" />
									</StackPanel>
								</shared:PixelSnapper>
						</Border>
						
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="ScrollableLeft">
								<Setter Property="BorderThickness" Value="0,0,1,0" />
								<Setter TargetName="label" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="90" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="ScrollableTop">
								<Setter Property="BorderThickness" Value="0,0,0,1" />
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="ScrollableRight">
								<Setter Property="BorderThickness" Value="1,0,0,0" />
								<Setter TargetName="label" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="90" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="ScrollableBottom">
								<Setter Property="BorderThickness" Value="0,1,0,0" />
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="FixedLeft">
								<Setter Property="BorderThickness" Value="0,0,1,0" />
								<Setter TargetName="label" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="90" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="FixedTop">
								<Setter Property="BorderThickness" Value="0,0,0,1" />
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="FixedRight">
								<Setter Property="BorderThickness" Value="1,0,0,0" />
								<Setter TargetName="label" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="90" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="FixedBottom">
								<Setter Property="BorderThickness" Value="0,1,0,0" />
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		    
    
    </UserControl.Resources>

	<!-- SyntaxEditor that uses a custom editor margin factory -->
	<editor:SyntaxEditor WordWrapMode="Word" IsIndicatorMarginVisible="True" IsLineNumberMarginVisible="True" 
		IsRulerMarginVisible="True" AreWordWrapGlyphsVisible="True">
		<editor:SyntaxEditor.ViewMarginFactories>
			<sample:CustomMarginFactory />
		</editor:SyntaxEditor.ViewMarginFactories>
		
		<editor:EditorDocument xml:space="preserve"><![CDATA[This QuickStart shows the eight margin locations in which you can place custom margins.
					
While these custom margins simply show their location, any sort of UIElement can be embedded in a margin and inserted in those locations.  You also can insert multiple custom margins in the same location and can even insert them between the built-in margins.]]></editor:EditorDocument>

	</editor:SyntaxEditor>

</UserControl>
