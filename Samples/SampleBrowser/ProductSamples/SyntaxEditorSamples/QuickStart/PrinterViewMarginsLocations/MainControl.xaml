<UserControl x:Class="ActiproSoftware.ProductSamples.SyntaxEditorSamples.QuickStart.PrinterViewMarginsLocations.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor" 
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared" 
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.SyntaxEditorSamples.QuickStart.PrinterViewMarginsLocations"
    >
    <UserControl.Resources>

		<!-- sample:CustomMargin Style -->
		<Style x:Key="{x:Type sample:CustomMargin}" TargetType="{x:Type sample:CustomMargin}">
			<Setter Property="BorderBrush" Value="#F0F0F0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type sample:CustomMargin}">

						<Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True">
								<shared:PixelSnapper>
									<StackPanel x:Name="label" Margin="3" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
										<TextBlock Text="Custom margin placement: " />
										<TextBlock FontWeight="Bold" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Placement}" />
									</StackPanel>
								</shared:PixelSnapper>
						</Border>
						
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="Left">
								<Setter Property="BorderThickness" Value="0,0,1,0" />
								<Setter TargetName="label" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="90" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="Top">
								<Setter Property="BorderThickness" Value="0,0,0,1" />
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="Right">
								<Setter Property="BorderThickness" Value="1,0,0,0" />
								<Setter TargetName="label" Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="90" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Placement}" Value="Bottom">
								<Setter Property="BorderThickness" Value="0,1,0,0" />
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		    
    
    </UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		
		<!-- SyntaxEditor that uses a custom printer margin factory -->
		<editor:SyntaxEditor x:Name="editor" Grid.ColumnSpan="2" WordWrapMode="Word" AreWordWrapGlyphsVisible="True">
			<editor:SyntaxEditor.PrintSettings>
				<editor:PrintSettings>
					<editor:PrintSettings.ViewMarginFactories>
						<sample:CustomMarginFactory />
					</editor:PrintSettings.ViewMarginFactories>
				</editor:PrintSettings>
			</editor:SyntaxEditor.PrintSettings>
			
			<editor:EditorDocument xml:space="preserve"><![CDATA[This QuickStart shows the four margin locations in which you can place custom margins in a printout.
						
While these custom margins simply show their location, any sort of UIElement can be embedded in a margin and inserted in those locations.  You also can insert multiple custom margins in the same location and can even insert them between the built-in margins.]]></editor:EditorDocument>

		</editor:SyntaxEditor>

		<Button x:Name="refreshPrintPreviewButton" Grid.Row="1" Margin="20,10,10,10" 
			Content="Refresh Print Preview" Click="OnRefreshPrintPreviewButtonClick" />
		<Button x:Name="showPrintPreviewDialogButton" Grid.Row="1" Grid.Column="1" Margin="10,10,20,10" 
			Content="Show Print Preview Dialog" Click="OnShowPrintPreviewDialogButtonClick" />

		<editor:EditorDocumentViewer x:Name="documentViewer" Grid.Row="2" Grid.ColumnSpan="2" />
		
	</Grid>

</UserControl>
