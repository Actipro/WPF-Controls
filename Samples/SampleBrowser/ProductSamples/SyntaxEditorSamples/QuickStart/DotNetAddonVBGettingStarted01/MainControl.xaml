<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor"
    >
	
	<editor:SyntaxEditor x:Name="codeEditor" IsLineNumberMarginVisible="True">
		<editor:EditorDocument xml:space="preserve">
			<editor:EditorDocument.Language>
				<editor:VBSyntaxLanguage />
			</editor:EditorDocument.Language><![CDATA[Imports System
Imports System.Collections.Generic
Imports System.Diagnostics

Namespace DotNetLanguagesAddon

	''' <summary>
	''' Advanced Visual Basic code editing for your end users
	''' with the .NET Languages Add-on for Actipro 
	''' SyntaxEditor.
	'''	</summary>
	Public Class VBLanguage
	
		''' <summary>
		''' This first Getting Started step shows how to
		''' assign VBSyntaxLanguage in XAML, which will
		''' provide syntax highlighting, parsing, syntax
		''' error reporting, automatic outlining, and some
		''' basic IntelliPrompt features out-of-the-box.
		'''	</summary>
		Public Sub DemoTest()
		
			' The next Getting Started step shows how to
			' add external assembly references to the project
			' assembly used by the language to achieve more
			' advanced automated IntelliPrompt features.
			
			Dim number = 1
			Debug.WriteLine(number.ToString())
			
			' This syntax language implementation is part of
			' the .NET Languages Add-on for SyntaxEditor, 
			' which is optional and sold separately from 
			' WPF Studio.
			
		End Sub
	End Class
End Namespace
]]></editor:EditorDocument>
	</editor:SyntaxEditor>

</UserControl>
