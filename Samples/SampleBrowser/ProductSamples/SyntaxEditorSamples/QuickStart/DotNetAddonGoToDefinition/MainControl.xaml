<UserControl x:Class="ActiproSoftware.ProductSamples.SyntaxEditorSamples.QuickStart.DotNetAddonGoToDefinition.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared" 
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor" 
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes" 
	FocusManager.FocusedElement="{Binding ElementName=codeEditor}"
    >
    
	<DockPanel>
		<!-- Toolbar -->
		<StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="10">
			<Button Click="OnGoToDefinitionButtonClick">
				<StackPanel Orientation="Horizontal">
					<shared:DynamicImage Source="/Images/Icons/GoToDefinition16.png" Width="16" Height="16" Stretch="UniformToFill" VerticalAlignment="Center" />
					<TextBlock Margin="2,0,7,0" Text="Go To Definition" VerticalAlignment="Center" />
				</StackPanel>
			</Button>
			<CheckBox x:Name="selectDefinitionCheckBox" Content="Select Definition on Navigate" Margin="20,0" VerticalAlignment="Center"
					  Checked="OnSelectDefinitionCheckBoxIsCheckedChanged"
					  Unchecked="OnSelectDefinitionCheckBoxIsCheckedChanged" />
		</StackPanel>

		<!-- Results -->
		<TextBox x:Name="resultsTextBox" DockPanel.Dock="Bottom" Margin="0,7,0,0" Height="200" IsReadOnly="True" 
				 VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" Text="Change selection in SyntaxEditor to show resolution results here..."
				 Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundLowBrushKey}}" />
		
		<!-- Code Editor -->
		<editor:SyntaxEditor x:Name="codeEditor" IsLineNumberMarginVisible="True"
							 MouseMove="OnSyntaxEditorMouseMove"
							 MouseLeave="OnSyntaxEditorMouseLeave"
							 ViewSelectionChanged="OnSyntaxEditorViewSelectionChanged">
			<editor:EditorDocument xml:space="preserve"><![CDATA[using System;

namespace DotNetLanguagesAddon {

	/// <summary>
	/// The .NET Languages Add-on includes a powerful resolver which can be
	/// used to query contextual information at any position within a code
	/// document. The same resolver that powers our IntelliPrompt features
	/// can also be used to enable 'Go To Definition' functionality.
	///	</summary>
	public class CSharpGoToDefinition {
	
		// Move the caret throughout the document and the resolver will
		// output relevant data for that position.
				
		// Move the mouse over the document and the resolver will output
		// relevant data for the position under the mouse.
				
		public CSharpGoToDefinition() {
			
			// Position the caret over 'this', 'DemoMethod' or 'DemoProperty'
			// and click the 'Go To Definition' button to jump to either the
			// relevant declaration.

			this.DemoMethod(this.DemoProperty);
		}
				
		public void DemoMethod(string name) {
			
			// Position the caret over the use of 'name' below and click
			// the 'Go To Definition' button to jump to the declaration
			// of the parameter.
				
			System.Diagnostics.Debug.WriteLine("The name is " + name);
		}
				
		public string DemoProperty {
			// Hold the CTRL key and move the mouse over 'CSharpGoToDefinition'
			// below. The style of recognized tokens will change and
			// the cursor will indicate the token is clickable. Click
			// a recognized token to jump to the declaration.
				
			get {
				return nameof(CSharpGoToDefinition) +
					nameof(DemoMethod) +
					nameof(DemoProperty);
			}
		}
	}	
}
]]></editor:EditorDocument>
		</editor:SyntaxEditor>
		
	</DockPanel>
	
</UserControl>
