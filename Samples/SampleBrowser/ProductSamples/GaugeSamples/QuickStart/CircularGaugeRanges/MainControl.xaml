<sampleBrowser:ProductItemControl 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:gauge="http://schemas.actiprosoftware.com/winfx/xaml/gauge"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids" 
	xmlns:gridseditors="http://schemas.actiprosoftware.com/winfx/xaml/gridseditors" 
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<!-- Converters -->
		<shared:UnitToDoubleConverter x:Key="UnitToDoubleConverter" />

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=needle, Path=Value}">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>

					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=StartValue}" DisplayName="Range start value">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=EndValue}" DisplayName="Range end value">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=StartExtent, Converter={StaticResource UnitToDoubleConverter}}" DisplayName="Range start extent">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="20" SmallChange="1" LargeChange="5" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=EndExtent, Converter={StaticResource UnitToDoubleConverter}}" DisplayName="Range end extent">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="20" SmallChange="1" LargeChange="5" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=ScalePlacement}" DisplayName="Range scale placement" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=ScaleOffset, Converter={StaticResource UnitToDoubleConverter}}" DisplayName="Range scale offset">
						<gridseditors:DoublePropertyEditor Minimum="-20" Maximum="20" SmallChange="1" LargeChange="5" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=Background}" DisplayName="Range background" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=BorderBrush}" DisplayName="Range border brush" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=greenRange, Path=BorderWidth}" DisplayName="Range border width">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="5" SmallChange="1" LargeChange="1" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>

					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=redRange, Path=Visibility}" DisplayName="Second range visibility" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=redRange, Path=StartValue}" DisplayName="Second range start value">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=redRange, Path=EndValue}" DisplayName="Second range end value">
						<gridseditors:DoublePropertyEditor Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" HasPopup="True" PickerKind="Default" />
					</grids:PropertyModel>

					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=gauge, Path=(themes:ThemeProperties.ZoomLevel)}">
						<gridseditors:DoublePropertyEditor Minimum="1" Maximum="5" SmallChange="0.5" LargeChange="1" Format="P0" IsEditable="False" />
					</grids:PropertyModel>
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The CircularGauge control includes the ability to add any number of ranges, which highlight areas of
					interest along the gauge. In addition, the various colors and effects used by the ranges can be customized as desired.
					<LineBreak /><LineBreak />
					Several of the options available for the ranges can be configured.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelFullStyle}">

			<gauge:CircularGauge x:Name="gauge" Width="220" Height="220" Radius="110" HorizontalAlignment="Center"
					Background="#FFEEEEE3" RimBrush="#FFF4F3F8" FrameType="CircularGear" IsBackgroundEffectEnabled="False">

				<gauge:CircularGauge.LayoutTransform>
					<ScaleTransform ScaleX="{Binding ElementName=gauge, Path=(themes:ThemeProperties.ZoomLevel)}" ScaleY="{Binding ElementName=gauge, Path=(themes:ThemeProperties.ZoomLevel)}" />
				</gauge:CircularGauge.LayoutTransform>

				<gauge:CircularGauge.Scales>
					<gauge:CircularScale Radius="75" StartAngle="30" SweepAngle="330" BarExtent="1">
						<gauge:CircularScale.TickSets>
							<gauge:CircularTickSet MajorInterval="10" MinorInterval="2">
								<gauge:CircularTickSet.Ranges>
									<gauge:CircularRange x:Name="redRange" ScalePlacement="Inside" StartValue="80"
											EndValue="100" HasDropShadow="False" StartExtent="15" EndExtent="15"
											Background="{shared:LinearGradientBrush Red, DarkRed, GradientType=LeftToRight}" Visibility="Collapsed" />
									<gauge:CircularRange x:Name="greenRange" ScalePlacement="Inside" StartValue="0"
											EndValue="20" HasDropShadow="False" StartExtent="15" EndExtent="15"
											Background="{shared:LinearGradientBrush Green, DarkGreen, GradientType=LeftToRight}" />
								</gauge:CircularTickSet.Ranges>
								<gauge:CircularTickSet.Ticks>
									<gauge:CircularTickMarkMinor TickMarkExtent="7" TickMarkAscent="4"
											TickMarkType="TriangleSharp"
											Background="{shared:LinearGradientBrush Black, DarkGray, GradientType=TopToBottom}" />
									<gauge:CircularTickMarkMajor TickMarkExtent="10" TickMarkAscent="4"
											TickMarkType="SwordBlunt"
											Background="{shared:LinearGradientBrush Black, DarkGray, GradientType=TopToBottom}" />
									<gauge:CircularTickLabelMajor Foreground="#FF0C0909" FontSize="10"
											ScalePlacement="Outside" ScaleOffset="5" TextOrientation="Rotated" />
								</gauge:CircularTickSet.Ticks>
								<gauge:CircularTickSet.Pointers>
									<gauge:CircularPointerNeedle x:Name="needle" NeedleType="TriangleSharp"
											PointerExtent="75" PointerAscent="10"
											Background="{shared:LinearGradientBrush #FFE16179, #FF9A1225, GradientType=LeftToRight, AdditionalStopCount=1}" />
									<gauge:CircularPointerCap PointerExtent="25" CapType="CircleConvex"
											Background="#FF9A1225" />
								</gauge:CircularTickSet.Pointers>

							</gauge:CircularTickSet>
						</gauge:CircularScale.TickSets>
					</gauge:CircularScale>
				</gauge:CircularGauge.Scales>
			</gauge:CircularGauge>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
