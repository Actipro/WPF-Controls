<sampleBrowser:ProductItemControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:gridseditors="http://schemas.actiprosoftware.com/winfx/xaml/gridseditors"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<shared:PercentageConverter x:Key="PercentageConverter" />

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<StackPanel>
					<sampleBrowser:SampleOptionsPropertyGrid>
						<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=reflection, Path=ReflectionHeight}">
							<gridseditors:DoublePropertyEditor Minimum="5" Maximum="75" />
						</grids:PropertyModel>
						<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=reflection, Path=ReflectionMargin}">
							<gridseditors:DoublePropertyEditor Minimum="0" Maximum="50" />
						</grids:PropertyModel>
						<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=reflection, Path=ReflectionSkewAngleX}">
							<gridseditors:DoublePropertyEditor Minimum="-75" Maximum="75" />
						</grids:PropertyModel>
						<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=reflection, Path=ReflectionStartOpacity}">
							<gridseditors:DoublePropertyEditor Minimum="0" Maximum="1" SmallChange="0.1" LargeChange="0.2" Format="P0" />
						</grids:PropertyModel>
						<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=reflection, Path=ReflectionEndOpacity}">
							<gridseditors:DoublePropertyEditor Minimum="0" Maximum="1" SmallChange="0.1" LargeChange="0.2" Format="P0" />
						</grids:PropertyModel>
						<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=reflection, Path=ReflectionEndOffset}">
							<gridseditors:DoublePropertyEditor Minimum="0" Maximum="1" SmallChange="0.1" LargeChange="0.2" Format="P0" />
						</grids:PropertyModel>
					</sampleBrowser:SampleOptionsPropertyGrid>

					<Button Margin="0,10,0,0" Content="Bounce" Style="{StaticResource SampleOptionsActionButtonStyle}">
						<Button.Triggers>
							<EventTrigger RoutedEvent="Button.Click">
								<EventTrigger.Actions>
									<BeginStoryboard>
										<Storyboard Storyboard.Target="{Binding ElementName=reflection}" FillBehavior="Stop">
											<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="0" To="-15" DecelerationRatio="0.5" AutoReverse="True" Duration="0:0:0.3" />
											<DoubleAnimation Storyboard.TargetProperty="ReflectionMargin" From="0" To="30" DecelerationRatio="0.5" AutoReverse="True" Duration="0:0:0.3" />

											<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="0" To="-4" DecelerationRatio="0.5" AutoReverse="True" BeginTime="0:0:0.6" Duration="0:0:0.2" />
											<DoubleAnimation Storyboard.TargetProperty="ReflectionMargin" From="0" To="8" DecelerationRatio="0.5" AutoReverse="True" BeginTime="0:0:0.6" Duration="0:0:0.2" />

											<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="0" To="-1" DecelerationRatio="0.5" AutoReverse="True" BeginTime="0:0:1" Duration="0:0:0.1" />
											<DoubleAnimation Storyboard.TargetProperty="ReflectionMargin" From="0" To="2" DecelerationRatio="0.5" AutoReverse="True" BeginTime="0:0:1" Duration="0:0:0.1" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger.Actions>
							</EventTrigger>
						</Button.Triggers>
					</Button>
				</StackPanel>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The ReflectionContentControl control makes it simple to create a reflection effect for its content.
					<LineBreak /><LineBreak />
					It is a simple ContentControl that draws a reflection of the content below the control.
					Unlike other implementations of this effect that you may find, ReflectionContentControl
					doesn't include the height of the reflection in the measurement of the control.
					This allows you to properly center the content in its container, and have its reflection drop out underneath that.
					<LineBreak /><LineBreak />
					If a ReflectionHeight is not set on the ReflectionContentControl, it will automatically make the reflection the same height as the content.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<sampleBrowser:LabeledCardControl HorizontalAlignment="Center">
				<shared:ReflectionContentControl x:Name="reflection" Margin="90,60" ReflectionHeight="50">
					<shared:ReflectionContentControl.RenderTransform>
						<TranslateTransform />
					</shared:ReflectionContentControl.RenderTransform>
					<shared:ActiproLogo />
				</shared:ReflectionContentControl>
			</sampleBrowser:LabeledCardControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
