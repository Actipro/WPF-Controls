<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.ShellSamples.QuickStart.ShellListViewColumns.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.ShellSamples.QuickStart.ShellListViewColumns"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:shell="http://schemas.actiprosoftware.com/winfx/xaml/shell"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=listView, Path=RootSpecialFolderKind}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=listView, Path=RootShellFolderParsingName}" DisplayName="Root folder parsing name" />
					<grids:PropertyModel>
						<grids:PropertyModel.ValueTemplate>
							<DataTemplate>
								<Button Content="List Checked Items" Click="OnListCheckedItemsButtonClick" />
							</DataTemplate>
						</grids:PropertyModel.ValueTemplate>
					</grids:PropertyModel>
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>
			
			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					<Italic Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ColorPaletteRedBackgroundHighBrushKey}}">The Shell controls demonstrated here are operating on your PC's file system, so use caution with operations like delete, rename, etc.</Italic>
					<LineBreak /><LineBreak />	
					This QuickStart shows two ways to customize a ShellListView's columns.
					<LineBreak /><LineBreak />
					First, the default DetailsLayoutModeItemTemplate, used as the DataTemplate for the Name column, is updated to include a CheckBox that is bound to the view model's Tag property.
					A custom item adapter implementation ensures the view model's Tag property defaults to false so all items appear unchecked initially.
					<LineBreak /><LineBreak />
					Second, a custom shell service adds a Kind column via an IShellProperty implementation that displays the kind of shell object.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>
	
	<Grid Style="{StaticResource SamplePanelWideStyle}">
		<shell:ShellListView x:Name="listView" RootSpecialFolderKind="Default">
			<shell:ShellListView.DetailsLayoutModeItemTemplate>
				<DataTemplate>
					<shared:PixelSnapper VerticalRoundMode="RoundToEven">
						<Grid Margin="2,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<CheckBox Margin="0,0,5,0" IsChecked="{Binding Tag, Mode=TwoWay}" VerticalAlignment="Center" />
							<Image Grid.Column="1" Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIcon, Mode=OneWay}" />
							<Image Grid.Column="1" Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIconOverlay, Mode=OneWay}" />
							<shell:ShellEditableContentControl Grid.Column="2" Margin="2,0,0,0" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" VerticalAlignment="Center" />
						</Grid>
					</shared:PixelSnapper>
				</DataTemplate>
			</shell:ShellListView.DetailsLayoutModeItemTemplate>

			<shell:ShellListView.DefaultShellService>
				<sample:CustomShellService />
			</shell:ShellListView.DefaultShellService>
			<shell:ShellListView.ItemAdapter>
				<sample:CustomShellObjectItemAdapter />
			</shell:ShellListView.ItemAdapter>
		</shell:ShellListView>
	</Grid>
	
</sampleBrowser:ProductItemControl>
