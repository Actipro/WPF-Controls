<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.EditorsSamples.QuickStart.EnumEditBoxIntro.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:views="http://schemas.actiprosoftware.com/winfx/xaml/views"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsNullAllowed}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsReadOnly}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsEditable}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=UseDisplayAttributes}" />
					<grids:PropertyModel DisplayName="Sort comparer">
						<grids:PropertyModel.ValueTemplate>
							<DataTemplate>
								<ComboBox SelectedIndex="0" Style="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedComboBoxStyleKey}}" SelectionChanged="OnSortComboBoxSelectionChanged">
									<system:String>None</system:String>
									<system:String>By Name</system:String>
								</ComboBox>
							</DataTemplate>
						</grids:PropertyModel.ValueTemplate>
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=PlaceholderText}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SpinnerVisibility}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SpinWrapping}" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The EnumEditBox control is an advanced editor for entering enumeration (Enum) data.
					It has a unique design that allows for fast data entry, regardless of which kind of input (keyboard, mouse, or touch) is used.
					<LineBreak /><LineBreak />
					The editor's main appearance is similar to a standard TextBox, where the value can be typed in via a keyboard if the edit box is marked as editable.
					Up/down arrow keys, PgUp/PgDn keys, and the mouse wheel can all be used to switch between defined enumeration values.
					<LineBreak /><LineBreak />
					The editor also contains a default popup picker that is geared for mouse and touch input.
					Flags enumerations allow for multiple selection on the picker, while non-Flags enumerations behave more like a standard ComboBox.
					<LineBreak /><LineBreak />
					The editor supports the use of DisplayAttributes for customized naming, custom sorting, popup picker customization,
					and optionally null values, placeholder text, and a header.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleVerticalScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<editors:EnumEditBox x:Name="editBox" HorizontalAlignment="Center" MinWidth="250" PlaceholderText="Enum" 
								 IsNullAllowed="True" EnumType="{Binding EnumWithFlagsType}" Value="{Binding EnumWithFlagsCurrentValue}" />

			<views:MultiColumnPanel MaxWidth="{StaticResource SampleNarrowMaxWidth}" MaxColumnCount="2" ColumnMinWidth="200">
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Intermediate Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=IntermediateValue}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(updated while editing text)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=Value}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(used for view-model binding)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
			</views:MultiColumnPanel>

			<sampleBrowser:SampleGalleryControl>

				<sampleBrowser:LabeledCardControl Label="A non-Flags enumeration (note the alternate popup style)">
					<editors:EnumEditBox MinWidth="200" Value="{Binding EnumWithoutFlagsCurrentValue}" PlaceholderText="Enum value" IsNullAllowed="True" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="A non-Flags enumeration with name-based sorting">
					<editors:EnumEditBox x:Name="sortedEditBox" MinWidth="200" Value="{Binding EnumWithoutFlagsCurrentValue}" PlaceholderText="Enum value" IsNullAllowed="True" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Editable with placeholder text telling the user the kind of data to enter">
					<editors:EnumEditBox MinWidth="200" EnumType="{Binding EnumWithFlagsType}" PlaceholderText="Enum value" IsNullAllowed="True" IsEditable="True" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="By disabling null values, a value will always be required">
					<editors:EnumEditBox MinWidth="200" EnumType="{Binding EnumWithFlagsType}" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

			</sampleBrowser:SampleGalleryControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
