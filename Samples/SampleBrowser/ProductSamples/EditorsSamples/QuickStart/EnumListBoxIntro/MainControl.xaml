<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.EditorsSamples.QuickStart.EnumListBoxIntro.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=listBox1, Path=UseDisplayAttributes}" />
					<grids:PropertyModel DisplayName="Sort comparer">
						<grids:PropertyModel.ValueTemplate>
							<DataTemplate>
								<ComboBox SelectedIndex="0" Style="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedComboBoxStyleKey}}" SelectionChanged="OnSortComboBoxSelectionChanged">
									<system:String>None</system:String>
									<system:String>By Name</system:String>
									<system:String>Custom (Random)</system:String>
								</ComboBox>
							</DataTemplate>
						</grids:PropertyModel.ValueTemplate>
					</grids:PropertyModel>
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The EnumListBox control allows enumeration values to be intuitively entered by the user.
					Simply bind the EnumValue property and the items will automatically be updated.
					Support for both standard enumerations and flags enumerations is built-in.
					<LineBreak /><LineBreak />
					The string-representation of the enumeration values can be easily customized by marking them 
					with a DisplayAttribute and setting the UseDisplayAttributes property
					to true.
					<LineBreak /><LineBreak />
					Custom sorting of the enumeration values can be implemented via the EnumSortComparer property. 
					By default, no comparer is used which effectively sorts the enumeration values in the order they are defined.
					The EnumValueNameSortComparer class can be used to sort enumeration values alphabetically based on their names, or
					any custom class that implements IComparer&lt;Enum&gt; can be used.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleVerticalScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<sampleBrowser:SampleGalleryControl Label="{x:Null}" UseLowerContrast="False">

				<sampleBrowser:LabeledCardControl MinWidth="250" Label="Enum w/ FlagsAttribute" HorizontalAlignment="Center">
					<StackPanel>
						<editors:EnumListBox x:Name="listBox1" EnumValue="{Binding EnumWithFlags}" />
						<TextBlock Margin="0,20,0,0" Text="{Binding ElementName=listBox1, Path=EnumValue}" Style="{StaticResource SampleLargeValueTextBlockStyle}" />
					</StackPanel>
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl MinWidth="250" Label="Enum w/o FlagsAttribute" HorizontalAlignment="Center">
					<StackPanel>
						<editors:EnumListBox x:Name="listBox2" EnumValue="{Binding EnumWithoutFlags}" 
												 UseDisplayAttributes="{Binding ElementName=listBox1, Path=UseDisplayAttributes}" />
						<TextBlock Margin="0,20,0,0" Text="{Binding ElementName=listBox2, Path=EnumValue}" Style="{StaticResource SampleLargeValueTextBlockStyle}" />
					</StackPanel>
				</sampleBrowser:LabeledCardControl>

			</sampleBrowser:SampleGalleryControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
