<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.EditorsSamples.QuickStart.BrushEditBoxIntro.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:views="http://schemas.actiprosoftware.com/winfx/xaml/views"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasSwatch}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasText}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasPopup}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsNullAllowed}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsGradientAllowed}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsReadOnly}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsEditable}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsAlphaEnabled}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=PlaceholderText}" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The BrushEditBox control is an advanced editor for entering Brush-based data.
					It has a unique design that allows for fast data entry, regardless of which kind of input (keyboard, mouse, or touch) is used.
					<LineBreak /><LineBreak />
					The editor's main appearance is similar to a standard TextBox, where solid color brush values can be typed in via a keyboard.
					<LineBreak /><LineBreak />
					The editor also contains a default popup picker that is geared for mouse and touch-based input
					of a Brush, with support for solid color and gradient brushes.
					<LineBreak /><LineBreak />
					The editor supports popup picker customization,
					and optionally null values, placeholder text, and a header.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleVerticalScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<editors:BrushEditBox x:Name="editBox" HorizontalAlignment="Center" MinWidth="190" PlaceholderText="Brush" 
								  IsAlphaEnabled="True" IsNullAllowed="True" Value="#e37700">
			</editors:BrushEditBox>

			<views:MultiColumnPanel MaxWidth="{StaticResource SampleNarrowMaxWidth}" MaxColumnCount="2" ColumnMinWidth="200">
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Intermediate Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=IntermediateValue}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(updated while editing text)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=Value}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(used for view-model binding)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
			</views:MultiColumnPanel>

			<sampleBrowser:SampleGalleryControl>

				<sampleBrowser:LabeledCardControl Label="Linear gradient brush support">
					<editors:BrushEditBox MinWidth="180" HorizontalAlignment="Left">
						<editors:BrushEditBox.Value>
							<LinearGradientBrush EndPoint="1,0">
								<GradientStop Offset="0" Color="#70ff19" />
								<GradientStop Offset="0.5" Color="#ffe719" />
								<GradientStop Offset="1" Color="#ff2f19" />
							</LinearGradientBrush>
						</editors:BrushEditBox.Value>
					</editors:BrushEditBox>
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Radial gradient brush support">
					<editors:BrushEditBox MinWidth="180" HorizontalAlignment="Left">
						<editors:BrushEditBox.Value>
							<RadialGradientBrush>
								<GradientStop Offset="0" Color="#ff2f19" />
								<GradientStop Offset="0.5" Color="#ffe719" />
								<GradientStop Offset="1" Color="#70ff19" />
							</RadialGradientBrush>
						</editors:BrushEditBox.Value>
					</editors:BrushEditBox>
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Alpha transparency support can optionally be disabled">
					<editors:BrushEditBox MinWidth="180" Value="Yellow" IsAlphaEnabled="False" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Placeholder text telling the user the kind of data to enter">
					<editors:BrushEditBox MinWidth="180" PlaceholderText="Background brush" IsNullAllowed="True" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="By disabling null values, a value will always be required">
					<editors:BrushEditBox MinWidth="180" Value="Red" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Compact swatch-only display">
					<editors:BrushEditBox HasText="False" IsEditable="False" Value="LightSteelBlue" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

			</sampleBrowser:SampleGalleryControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
