<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.EditorsSamples.QuickStart.Int16EditBoxIntro.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:common="clr-namespace:ActiproSoftware.ProductSamples.EditorsSamples.Common"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:gridseditors="http://schemas.actiprosoftware.com/winfx/xaml/gridseditors"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:views="http://schemas.actiprosoftware.com/winfx/xaml/views"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<!-- SliderInt16PickerStyle -->
		<Style x:Key="SliderInt16PickerStyle" TargetType="editors:Int16Picker">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="editors:Int16Picker">
						<StackPanel Orientation="Horizontal">
							<RepeatButton Width="24" Margin="2" Padding="3" Command="{TemplateBinding SmallDecrementValueCommand}" VerticalAlignment="Center" TabIndex="3">-</RepeatButton>
							<Slider Width="150" Margin="5,0,5,0" Padding="0" TickPlacement="None" 
									Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
									Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" 
									VerticalAlignment="Center" TabIndex="1" />
							<RepeatButton Width="24" Margin="2" Padding="3" Command="{TemplateBinding SmallIncrementValueCommand}" VerticalAlignment="Center" TabIndex="2">+</RepeatButton>
						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- SpecificNumbersInt16PickerStyle -->
		<Style x:Key="SpecificNumbersInt16PickerStyle" TargetType="editors:Int16Picker">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="editors:Int16Picker">
						<Grid>
							<Grid.Resources>
								<Style TargetType="Button">
									<Setter Property="HorizontalAlignment" Value="Stretch" />
									<Setter Property="VerticalAlignment" Value="Stretch" />
								</Style>
							</Grid.Resources>
							<Grid.RowDefinitions>
								<RowDefinition Height="40" />
								<RowDefinition Height="40" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="50" />
								<ColumnDefinition Width="50" />
								<ColumnDefinition Width="50" />
								<ColumnDefinition Width="50" />
								<ColumnDefinition Width="50" />
							</Grid.ColumnDefinitions>

							<Button Grid.Row="0" Grid.Column="0" Margin="1" Content="1" CommandParameter="1" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="0" Grid.Column="1" Margin="1" Content="2" CommandParameter="2" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="0" Grid.Column="2" Margin="1" Content="3" CommandParameter="3" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="0" Grid.Column="3" Margin="1" Content="4" CommandParameter="4" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="0" Grid.Column="4" Margin="1" Content="5" CommandParameter="5" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="1" Grid.Column="0" Margin="1" Content="6" CommandParameter="6" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="1" Grid.Column="1" Margin="1" Content="7" CommandParameter="7" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="1" Grid.Column="2" Margin="1" Content="8" CommandParameter="8" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="1" Grid.Column="3" Margin="1" Content="9" CommandParameter="9" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
							<Button Grid.Row="1" Grid.Column="4" Margin="1" Content="10" CommandParameter="10" Command="{TemplateBinding SetValueAndClosePopupCommand}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasPopup}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=PickerKind}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsNullAllowed}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsReadOnly}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsEditable}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=Format}" 
										 ValueTemplateKind="LimitedObject" StandardValues="{x:Static common:PredefinedFormats.Int16}"
										 StandardValuesSelectedValuePath="Format" StandardValuesDisplayMemberPath="Name" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=PlaceholderText}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=Minimum}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=Maximum}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SmallChange}">
						<gridseditors:Int16PropertyEditor Minimum="1" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=LargeChange}">
						<gridseditors:Int16PropertyEditor Minimum="1" />
					</grids:PropertyModel>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SpinnerVisibility}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SpinWrapping}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=TextAlignment}" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The Int16EditBox control is an advanced editor for entering integer-based data.
					It has a unique design that allows for fast data entry, regardless of which kind of input (keyboard, mouse, or touch) is used.
					<LineBreak /><LineBreak />
					The editor's main appearance is similar to a standard TextBox, where the value can be typed in via a keyboard.
					Up/down arrow keys, PgUp/PgDn keys, and the mouse wheel can all be used to increment and decrement the value.
					<LineBreak /><LineBreak />
					The editor has two built-in popup picker options.
					One is a calculator and the other is a radial slider geared for mouse and touch input.
					The radial slider allows for making large value changes quickly, and also
					contains increment and decrement buttons for fine-tuning the value.
					<LineBreak /><LineBreak />
					The editor supports a range of allowed values, the format in which to display the value, popup picker customization,
					and optionally null values, placeholder text, and a header.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleVerticalScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<editors:Int16EditBox x:Name="editBox" HorizontalAlignment="Center" MinWidth="170" PlaceholderText="Number" 
								  IsNullAllowed="True" Value="153" Minimum="-10000" Maximum="10000" />

			<views:MultiColumnPanel MaxWidth="{StaticResource SampleNarrowMaxWidth}" MaxColumnCount="2" ColumnMinWidth="200">
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Intermediate Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=IntermediateValue}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(updated while editing text)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=Value}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(used for view-model binding)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
			</views:MultiColumnPanel>

			<sampleBrowser:SampleGalleryControl>

				<sampleBrowser:LabeledCardControl Label="Custom popup picker style with a linear slider">
					<editors:Int16EditBox MinWidth="150" Minimum="0" Maximum="10" HasPopup="True" HorizontalAlignment="Left" 
											PopupPickerStyle="{StaticResource SliderInt16PickerStyle}" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Custom popup picker style with specific values that can be selected">
					<editors:Int16EditBox MinWidth="150" Minimum="0" Maximum="10" HasPopup="True" HorizontalAlignment="Left" 
											PopupPickerStyle="{StaticResource SpecificNumbersInt16PickerStyle}" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Placeholder text telling the user the kind of data to enter">
					<editors:Int16EditBox MinWidth="150" PlaceholderText="Count" IsNullAllowed="True" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="By disabling null values, a value will always be required">
					<editors:Int16EditBox MinWidth="150" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

			</sampleBrowser:SampleGalleryControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
