<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.EditorsSamples.QuickStart.ColorEditBoxIntro.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:views="http://schemas.actiprosoftware.com/winfx/xaml/views"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<!-- HsbColorPickerStyle -->
		<Style x:Key="HsbColorPickerStyle" TargetType="editors:ColorPicker">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="editors:ColorPicker">
						<StackPanel Margin="10">
							<editors:HsbColorPicker x:Name="colorPicker" A="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=A, Mode=OneWay}"
													Hue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Mode=TwoWay}"
													Saturation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Saturation, Mode=TwoWay}"
													Brightness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Brightness, Mode=TwoWay}"
													/>

							<Grid Margin="0,10,0,0" HorizontalAlignment="Center">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="5" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="5" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="5" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<TextBlock Grid.Row="0" Grid.Column="0" Text="Hue" HorizontalAlignment="Right" VerticalAlignment="Center" />
								<TextBlock Grid.Row="2" Grid.Column="0" Text="Saturation" HorizontalAlignment="Right" VerticalAlignment="Center" />
								<TextBlock Grid.Row="4" Grid.Column="0" Text="Brightness" HorizontalAlignment="Right" VerticalAlignment="Center" />

								<editors:DoubleEditBox Grid.Row="0" Grid.Column="2" Value="{Binding ElementName=colorPicker, Path=Hue}" Width="100" IsReadOnly="True" HorizontalAlignment="Center" />
								<editors:DoubleEditBox Grid.Row="2" Grid.Column="2" Value="{Binding ElementName=colorPicker, Path=Saturation}" Width="100" IsReadOnly="True" HorizontalAlignment="Center" />
								<editors:DoubleEditBox Grid.Row="4" Grid.Column="2" Value="{Binding ElementName=colorPicker, Path=Brightness}" Width="100" IsReadOnly="True" HorizontalAlignment="Center" />
							</Grid>
						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasSwatch}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasText}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=HasPopup}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsNullAllowed}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsReadOnly}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsEditable}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsAlphaEnabled}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=IsInitialValueComparedOnPopup}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=PlaceholderText}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SpinnerVisibility}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=editBox, Path=SpinWrapping}" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The ColorEditBox control is an advanced editor for entering Color-based data.
					It has a unique design that allows for fast data entry, regardless of which kind of input (keyboard, mouse, or touch) is used.
					<LineBreak /><LineBreak />
					The editor's main appearance is similar to a standard TextBox, where the value can be typed in via a keyboard.
					Up/down arrow keys, PgUp/PgDn keys, and the mouse wheel can all be used to increment and decrement the value.
					<LineBreak /><LineBreak />
					The editor also contains a default popup picker that is geared for mouse and touch-based input
					of a Color based on hue, saturation, or brightness.
					Individual RGB decimal values may be entered as well.
					<LineBreak /><LineBreak />
					The editor supports popup picker customization,
					and optionally null values, placeholder text, and a header.
				</TextBlock>
			</Expander>
			
		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleVerticalScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<editors:ColorEditBox x:Name="editBox" HorizontalAlignment="Center" MinWidth="190" PlaceholderText="Color" 
								  IsNullAllowed="True" Value="#8000FF00" />

			<views:MultiColumnPanel MaxWidth="{StaticResource SampleNarrowMaxWidth}" MaxColumnCount="2" ColumnMinWidth="200">
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Intermediate Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=IntermediateValue}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(updated while editing text)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
				<StackPanel Margin="0,50,0,0">
					<TextBlock Text="Value:" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowMutedBrushKey}}" />
					<TextBlock Margin="0,3" Text="{Binding ElementName=editBox, Path=Value}" FontStyle="Italic" TextTrimming="CharacterEllipsis" TextAlignment="Center"  />
					<TextBlock Text="(used for view-model binding)" TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerForegroundLowSubtleBrushKey}}" />
				</StackPanel>
			</views:MultiColumnPanel>

			<sampleBrowser:SampleGalleryControl>

				<sampleBrowser:LabeledCardControl Label="Custom popup picker style with HSB value display">
					<editors:ColorEditBox MinWidth="180" Value="ForestGreen" HorizontalAlignment="Left" IsAlphaEnabled="False" PopupPickerStyle="{StaticResource HsbColorPickerStyle}" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Alpha transparency support can optionally be disabled">
					<editors:ColorEditBox MinWidth="180" Value="DeepSkyBlue" IsAlphaEnabled="False" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Placeholder text telling the user the kind of data to enter">
					<editors:ColorEditBox MinWidth="180" PlaceholderText="Background color" IsNullAllowed="True" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="By disabling null values, a value will always be required">
					<editors:ColorEditBox MinWidth="180" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

				<sampleBrowser:LabeledCardControl Label="Compact swatch-only display">
					<editors:ColorEditBox HasText="False" IsEditable="False" Value="LightSteelBlue" HorizontalAlignment="Left" />
				</sampleBrowser:LabeledCardControl>

			</sampleBrowser:SampleGalleryControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
