<Window x:Class="ActiproSoftware.ProductSamples.RibbonSamples.Demo.DocumentEditor.OptionsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:ribbonSamplesCommon="clr-namespace:ActiproSoftware.ProductSamples.RibbonSamples.Common" 
	Icon="/Images/Icons/Actipro.ico"
	WindowStartupLocation="CenterScreen"
	Title="Options" Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundLowBrushKey}}"
	Width="800" Height="500"
	>
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="120" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		
		<Border Grid.Column="1" Margin="0,7,7,7" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" BorderThickness="1">
			<Border BorderBrush="White" BorderThickness="1">
				<Border.Background>
					<LinearGradientBrush StartPoint="0,0" EndPoint="0,50" MappingMode="Absolute">
						<GradientStop Offset="0.75" Color="#A5DEFE" />
						<GradientStop Offset="1" Color="White" />
					</LinearGradientBrush>
				</Border.Background>
				
				<Grid Margin="30,7,15,15">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="15" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					
					<StackPanel Orientation="Horizontal" Height="32">
						<Image Width="32" Height="32" Source="/Images/Icons/QuickAccessToolBar32.png" />
						<TextBlock FontSize="14" Text="Customize the Quick Access Toolbar" VerticalAlignment="Center" />						
					</StackPanel>
					
					<ribbonSamplesCommon:CustomizeQat x:Name="customizeQat" Grid.Row="2" />
				</Grid>
			</Border>
		</Border>
		
		<ListBox Margin="7" DockPanel.Dock="Left">
			<ListBox.Resources>
				<!-- Custom ListBoxItem style that uses ribbon stock brushes -->
				<Style TargetType="ListBoxItem">
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ListBoxItem">
								<Border x:Name="OuterBorder" Margin="2,2,2,0" BorderThickness="1" CornerRadius="3" BorderBrush="Transparent" Background="Transparent">
									<Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="2" BorderBrush="Transparent" Background="Transparent">
										<ContentPresenter x:Name="Content" Margin="10,3,10,3" />				
									</Border>
								</Border>
								
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter TargetName="OuterBorder" Property="BorderThickness" Value="0" />
										<Setter TargetName="InnerBorder" Property="BorderThickness" Value="0" />
										<Setter TargetName="Content" Property="Margin" Value="0" />										
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderHoverBrushKey}}" />
										<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundHoverBrushKey}}" />
										<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderHoverBrushKey}}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="True" />
											<Condition Property="IsMouseOver" Value="False" />
										</MultiTrigger.Conditions>
										<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedNormalBrushKey}}" />
										<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundCheckedNormalBrushKey}}" />
										<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedNormalBrushKey}}" />
									</MultiTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="True" />
											<Condition Property="IsMouseOver" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedHoverBrushKey}}" />
										<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundCheckedHoverBrushKey}}" />
										<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedHoverBrushKey}}" />
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.Resources>
			
			<ListBoxItem>Popular</ListBoxItem>
			<ListBoxItem>Display</ListBoxItem>
			<ListBoxItem>Proofing</ListBoxItem>
			<ListBoxItem>Save</ListBoxItem>
			<ListBoxItem>Advanced</ListBoxItem>
			<ListBoxItem IsEnabled="False"><Separator /></ListBoxItem>			
			<ListBoxItem IsSelected="True">Customize</ListBoxItem>
			<ListBoxItem>Add-ins</ListBoxItem>
			<ListBoxItem>Trust Center</ListBoxItem>
			<ListBoxItem>Resources</ListBoxItem>
		</ListBox>
		
		<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,7,7" Orientation="Horizontal" HorizontalAlignment="Right">
			<Button MinWidth="70" IsDefault="True" Content="OK" Click="OnOKButtonClick" />
			<Button MinWidth="70" Margin="7,0,0,0" IsCancel="True" Content="Cancel" />
		</StackPanel>		
	</Grid>
	
</Window>
