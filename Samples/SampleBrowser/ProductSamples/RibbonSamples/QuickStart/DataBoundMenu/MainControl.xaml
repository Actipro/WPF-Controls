<sampleBrowser:ProductItemControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
	xmlns:ribbonSamplesCommon="clr-namespace:ActiproSoftware.ProductSamples.RibbonSamples.Common" 
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Actipro Ribbon supports data binding of menu items.  
					This means that you can auto-generate a list of menu items for a collection of data.
					This feature is generally used when populating menus like Window menus, where a list of open windows
					needs to be displayed, and clicking on a menu item should activate the window.
					<LineBreak /><LineBreak />
					To see the data binding of a Menu in action, click the PopupButton in the ribbon.
					It shows how you can place static controls before and after the dynamically generated menu items.
					In this sample, several filenames of open files are generated, which would be useful in an MDI scenario.
					<LineBreak /><LineBreak />
					In the XAML source for the menu, the Menu's ItemsSource is set to an array of 
					SimpleDataItem objects.
					However you could bind to a collection, array, or anything else that is enumerable.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelFullStyle}">

		<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
			<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
					Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<TextBox Grid.Row="1" BorderThickness="0" AcceptsReturn="True" />

					<!-- Ribbon Control -->
					<ribbon:Ribbon x:Name="ribbon" IsCollapsible="False">
						<!-- 
							Use pre-defined WordApplicationMenu type in the sample project so that we don't have redundant code 
							in this sample that takes away from the focus of the sample
						-->
						<ribbon:Ribbon.ApplicationMenu>
							<ribbonSamplesCommon:WordApplicationMenu />	
						</ribbon:Ribbon.ApplicationMenu>
						<ribbon:Ribbon.QuickAccessToolBarItems>
							<ribbon:Button ImageSourceSmall="/Images/Icons/Save16.png" Label="Save" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Undo16.png" Label="Undo" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Redo16.png" Label="Redo" />
						</ribbon:Ribbon.QuickAccessToolBarItems>
						<ribbon:Ribbon.Tabs>
							<ribbon:Tab Label="Home">
								<ribbon:Group Label="Preview">
			
									<ribbon:PopupButton ImageSourceLarge="/Images/Icons/Paste32.png" Label="Popup with a Data-Bound Menu">
										<StackPanel>
											<ribbon:Menu>
												<ribbon:Button Label="A menu item above the data-bound menu" />
												<ribbon:Separator />
											</ribbon:Menu>
											<ribbon:Menu>
												<ribbon:Menu.ItemTemplate>
													<DataTemplate DataType="ribbonSamplesCommon:SimpleDataItem">
														<ribbon:Button Context="MenuItem" Label="{Binding Name}" />
													</DataTemplate>
												</ribbon:Menu.ItemTemplate>
												<ribbon:Menu.ItemsSource>
													<x:Array Type="{x:Type ribbonSamplesCommon:SimpleDataItem}">
														<ribbonSamplesCommon:SimpleDataItem Name="MyDocument.rtf" />
														<ribbonSamplesCommon:SimpleDataItem Name="AnotherDocument.rtf" />
														<ribbonSamplesCommon:SimpleDataItem Name="ActiproRibbon.rtf" />
													</x:Array>
												</ribbon:Menu.ItemsSource>
											</ribbon:Menu>
											<ribbon:Menu>
												<ribbon:Separator />
												<ribbon:Button Label="Another menu item below the data-bound menu" />
											</ribbon:Menu>
										</StackPanel>
									</ribbon:PopupButton>
						
								</ribbon:Group>
							</ribbon:Tab>
						</ribbon:Ribbon.Tabs>
					</ribbon:Ribbon>
		
				</Grid>
			</Border>
		</shared:ShadowChrome>
	</Grid>

</sampleBrowser:ProductItemControl>
