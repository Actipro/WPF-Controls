<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.RibbonSamples.QuickStart.ApplicationButtonContent.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids" 
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"	
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
	xmlns:ribbonSamplesCommon="clr-namespace:ActiproSoftware.ProductSamples.RibbonSamples.Common" 
    xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=scenicRibbon, Path=ApplicationButtonLabel}" DisplayName="App button label" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					There are two ways that the application button can render:
					Scenic style with text content or Scenic style with image content.
					<LineBreak /><LineBreak />
					By default the application button in ribbon will display in Scenic style with the text File as its content.
					This is a string resource and can be customized by altering the SRName.UIApplicationButtonLabelText string resource
					before the ribbon is created.
					Alternatively the Ribbon.ApplicationButtonLabel property can be set at run-time to change it.
					The top ribbon in this sample shows the default File text content.
					<LineBreak /><LineBreak />
					Ribbon includes a standard image that can be easily set to the Scenic application button in place of the default File text.
					To use the built-in application button image, set the ApplicationButtonImageSource to the image source used
					in the source of this sample.
					You could use a 16x16 company logo image source instead if you wish.
					The bottom ribbon shows the built-in image that can be used in a Scenic ribbon.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelFullStyle}">

			<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="100" />
						</Grid.RowDefinitions>

						<TextBox Grid.Row="1" BorderThickness="0" AcceptsReturn="True" />

						<!-- Ribbon Control with "File" as application button content -->
						<ribbon:Ribbon x:Name="scenicRibbon" IsCollapsible="False">
							<ribbon:Ribbon.ApplicationMenu>
								<ribbonSamplesCommon:WordApplicationMenu />
							</ribbon:Ribbon.ApplicationMenu>
							<ribbon:Ribbon.QuickAccessToolBarItems>
								<ribbon:Button ImageSourceSmall="/Images/Icons/Save16.png" Label="Save" />
								<ribbon:Button ImageSourceSmall="/Images/Icons/Undo16.png" Label="Undo" />
								<ribbon:Button ImageSourceSmall="/Images/Icons/Redo16.png" Label="Redo" />
							</ribbon:Ribbon.QuickAccessToolBarItems>
							<ribbon:Ribbon.Tabs>
								<ribbon:Tab Label="Home" />
								<ribbon:Tab Label="View" />
							</ribbon:Ribbon.Tabs>
							<ribbon:Ribbon.ContextualTabGroups>
								<ribbon:ContextualTabGroup Label="Picture Tools" Color="{x:Static ribbon:ContextualTabGroupColors.Red}" IsActive="True">
									<ribbon:Tab Label="Format" />
								</ribbon:ContextualTabGroup>
							</ribbon:Ribbon.ContextualTabGroups>
						</ribbon:Ribbon>
					</Grid>
				</Border>
			</shared:ShadowChrome>

			<shared:ShadowChrome Margin="0,20,0,0" Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="100" />
						</Grid.RowDefinitions>

						<TextBox Grid.Row="1" BorderThickness="0" AcceptsReturn="True" />

						<!-- Ribbon Control with image as application button content -->
						<ribbon:Ribbon Grid.Column="2" IsCollapsible="False"
									   ApplicationButtonImageSource="/Images/Icons/ApplicationButtonDefault16.png">
							<ribbon:Ribbon.ApplicationMenu>
								<ribbonSamplesCommon:WordApplicationMenu />
							</ribbon:Ribbon.ApplicationMenu>
							<ribbon:Ribbon.QuickAccessToolBarItems>
								<ribbon:Button ImageSourceSmall="/Images/Icons/Save16.png" Label="Save" />
								<ribbon:Button ImageSourceSmall="/Images/Icons/Undo16.png" Label="Undo" />
								<ribbon:Button ImageSourceSmall="/Images/Icons/Redo16.png" Label="Redo" />
							</ribbon:Ribbon.QuickAccessToolBarItems>
							<ribbon:Ribbon.Tabs>
								<ribbon:Tab Label="Home" />
								<ribbon:Tab Label="View" />
							</ribbon:Ribbon.Tabs>
							<ribbon:Ribbon.ContextualTabGroups>
								<ribbon:ContextualTabGroup Label="Picture Tools" Color="{x:Static ribbon:ContextualTabGroupColors.Red}" IsActive="True">
									<ribbon:Tab Label="Format" />
								</ribbon:ContextualTabGroup>
							</ribbon:Ribbon.ContextualTabGroups>
						</ribbon:Ribbon>
					</Grid>
				</Border>
			</shared:ShadowChrome>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
