<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.RibbonSamples.QuickStart.AddRemoveControls.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
	xmlns:ribbonSamplesCommon="clr-namespace:ActiproSoftware.ProductSamples.RibbonSamples.Common" 
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<StackPanel>
					<TextBlock Text="Control location to modify:" />
					<shared:RadioButtonList x:Name="controlTypeList" Margin="10,0,0,0" SelectedIndex="0">
						<ListBoxItem>Quick Access ToolBar</ListBoxItem>
						<ListBoxItem>Tab Panel Items</ListBoxItem>
						<ListBoxItem>Tab</ListBoxItem>
						<ListBoxItem>Group</ListBoxItem>
						<ListBoxItem>First Group Children</ListBoxItem>
					</shared:RadioButtonList>

					<TextBlock Margin="0,20,0,0" Text="Label (used for groups/tabs):" />
					<TextBox x:Name="controlLabelTextBox" Margin="0,3,0,0" Text="Custom" />
					<Button Margin="0,3,0,0" Content="Add Control" Click="OnAddButtonClick" />

					<Button Margin="0,20,0,0" Content="Remove Control" Click="OnRemoveButtonClick" />
				</StackPanel>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Actipro Ribbon allows for dynamic addition and removal of controls anywhere in the user interface.
					It will recalculate layouts as appropriate.
					<LineBreak /><LineBreak />
					Once you launch the external window, use the controls on the window (above the document area) 
					to add and remove controls dynamically from the ribbon and see how it affects the layout.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelFullStyle}">

		<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
			<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
					Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<TextBox Grid.Row="1" BorderThickness="0" AcceptsReturn="True" />

					<!-- Ribbon Control -->
					<ribbon:Ribbon x:Name="ribbon">
						<!-- 
							Use pre-defined WordApplicationMenu, WordHomeTab, WordInsertTab types in the sample project so that we don't have redundant code 
							in this sample that takes away from the focus of the sample
						-->
						<ribbon:Ribbon.ApplicationMenu>
							<ribbonSamplesCommon:WordApplicationMenu />
						</ribbon:Ribbon.ApplicationMenu>
						<ribbon:Ribbon.QuickAccessToolBarItems>
							<ribbon:Button ImageSourceSmall="/Images/Icons/Save16.png" Label="Save" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Undo16.png" Label="Undo" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Redo16.png" Label="Redo" />
						</ribbon:Ribbon.QuickAccessToolBarItems>
						<ribbon:Ribbon.Tabs>
							<ribbonSamplesCommon:WordHomeTab />
							<ribbonSamplesCommon:WordInsertTab />
							<ribbon:Tab Label="Page Layout" KeyTipAccessText="P" />
							<ribbon:Tab Label="References" KeyTipAccessText="S" />
							<ribbon:Tab Label="Mailings" KeyTipAccessText="M" />
							<ribbon:Tab Label="Review" KeyTipAccessText="R" />
							<ribbon:Tab Label="View" KeyTipAccessText="W" />
						</ribbon:Ribbon.Tabs>
						<ribbon:Ribbon.ContextualTabGroups>
							<ribbon:ContextualTabGroup Label="Header &amp; Footer Tools" Color="{x:Static ribbon:ContextualTabGroupColors.Green}" IsActive="True">
								<ribbon:Tab Label="Design" KeyTipAccessText="JH" />
							</ribbon:ContextualTabGroup>
						</ribbon:Ribbon.ContextualTabGroups>
					</ribbon:Ribbon>

				</Grid>
			</Border>
		</shared:ShadowChrome>

	</Grid>

</sampleBrowser:ProductItemControl>
