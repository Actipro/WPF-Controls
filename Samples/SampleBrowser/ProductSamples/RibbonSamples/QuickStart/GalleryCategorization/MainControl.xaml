<sampleBrowser:ProductItemControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mediaImaging="clr-namespace:System.Windows.Media.Imaging;assembly=PresentationCore"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
	xmlns:ribbonSamplesCommon="clr-namespace:ActiproSoftware.ProductSamples.RibbonSamples.Common" 
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Actipro Ribbon provides extremely flexible support for gallery implementations.
					This sample shows a subset of the features found in galleries, most notably item categorization, filtering, and zooming.
					<LineBreak /><LineBreak />
					Sometimes you wish items to be categorized meaning that they are grouped with other items in the same category
					and displayed under a heading containing the name of the category.
					To accomplish this in Actipro Ribbon's PopupGallery, you simply assign your items to 
					the CategorizedItemsSource property instead of the regular ItemsSource property.
					<LineBreak /><LineBreak />
					When you do this, PopupGallery will examine each item for an attached
					PopupGallery.Category property containing the category name and it will group items
					in the same category together.
					It's as easy as that.
					<LineBreak /><LineBreak />
					Many times when there are multiple categories, it makes sense to allow the end user to filter down the categories
					that are displayed.  By default, all categories are displayed.
					If you set the CanFilter property to True, a filter drop-down will be available
					at the top of the PopupGallery, enabling the end user to select a single category for display if desired.
					<LineBreak /><LineBreak />
					Sometimes you have a gallery where you want to show a small representation of an item in the general list but
					when the mouse moves over the item, you'd like to display a more detailed representation.
					This is all possible by assigning a ZoomedInItemTemplate to the PopupGallery.
					<LineBreak /><LineBreak />
					The ZoomedInItemTemplate may contain completely different content than the regular
					ItemTemplate.  You also can even set the size of the template.  
					Generally the zoomed-in template is set to be twice as large as the regular item template.
					<LineBreak /><LineBreak />
					Please note that in this sample we are simply displaying images of the various bullets,
					and the zoomed-in template is scaling up the bullet image, making it appear blurry.
					In a production application you would really want to custom draw the items (see the Gallery with Custom Draw Items QuickStart)
					and also custom draw the zoomed-in template.
					<LineBreak /><LineBreak />
					Unlike other ribbon implementations, Actipro Ribbon doesn't require you to specify the item size on the PopupGallery class
					or set its width.  Instead we know that developers typically want to show a certain number of columns of items by default.
					Therefore, we created the InitialColumnCount property.
					In this sample it is set to 6 meaning that 6 columns of items will be initially displayed.
					PopupGallery does all the work of measuring your items and determining how large to make itself for initial display.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelFullStyle}">

		<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
			<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
					Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<TextBox Grid.Row="1" BorderThickness="0" AcceptsReturn="True" />

					<!-- Ribbon Control -->
					<ribbon:Ribbon x:Name="ribbon">
						<!-- 
							Use pre-defined WordApplicationMenu type in the sample project so that we don't have redundant code 
							in this sample that takes away from the focus of the sample
						-->
						<ribbon:Ribbon.ApplicationMenu>
							<ribbonSamplesCommon:WordApplicationMenu />	
						</ribbon:Ribbon.ApplicationMenu>
						<ribbon:Ribbon.QuickAccessToolBarItems>
							<ribbon:Button ImageSourceSmall="/Images/Icons/Save16.png" Label="Save" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Undo16.png" Label="Undo" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Redo16.png" Label="Redo" />
						</ribbon:Ribbon.QuickAccessToolBarItems>
						<ribbon:Ribbon.Tabs>
							<ribbon:Tab Label="Home">
								<ribbon:Group Label="Sample">
									<ribbon:StackPanel ItemVariantBehavior="AlwaysMedium" RowAlignment="Center">
										<ribbon:SplitButton ImageSourceSmall="/Images/Icons/Bullets16.png" Label="Bullets" KeyTipAccessText="U" PopupResizeMode="Both">
											<StackPanel>
												<ribbon:PopupGallery InitialColumnCount="6" CanFilter="True" IsSelectionHighlightVisible="False">
													<ribbon:PopupGallery.CategorizedItemsSource>
														<x:Array Type="{x:Type mediaImaging:BitmapImage}">
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Recently Used Bullets" UriSource="/Images/RibbonGalleries/Bullets/Type1.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/None.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type1.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type2.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type3.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type4.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type5.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type6.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Bullet Library" UriSource="/Images/RibbonGalleries/Bullets/Type7.png" />
															<mediaImaging:BitmapImage ribbon:PopupGallery.Category="Document Bullets" UriSource="/Images/RibbonGalleries/Bullets/Type1.png" />
														</x:Array>
													</ribbon:PopupGallery.CategorizedItemsSource>
													<ribbon:PopupGallery.ItemTemplate>
														<DataTemplate>
															<Border Margin="2" Width="40" Height="40" SnapsToDevicePixels="True"
																	BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.MenuPopupBorderNormalBrushKey}}" BorderThickness="1" 
																	Background="{DynamicResource {x:Static themes:AssetResourceKeys.MenuPopupBackgroundNormalBrushKey}}">
																<shared:DynamicImage Source="{Binding BindsDirectlyToSource=True}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" />
															</Border>
														</DataTemplate>
													</ribbon:PopupGallery.ItemTemplate>
													<ribbon:PopupGallery.ZoomedInItemTemplate>
														<DataTemplate>
															<Border Margin="2" Width="70" Height="70" SnapsToDevicePixels="True"
																	BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.MenuPopupBorderNormalBrushKey}}" BorderThickness="1" 
																	Background="{DynamicResource {x:Static themes:AssetResourceKeys.MenuPopupBackgroundNormalBrushKey}}">
																<shared:DynamicImage Source="{Binding BindsDirectlyToSource=True}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
																	<Image.LayoutTransform>
																		<ScaleTransform ScaleX="2" ScaleY="2" />
																	</Image.LayoutTransform>
																</shared:DynamicImage>
															</Border>
														</DataTemplate>
													</ribbon:PopupGallery.ZoomedInItemTemplate>
												</ribbon:PopupGallery>
												<ribbon:Separator />
												<ribbon:Menu>
													<ribbon:PopupButton ImageSourceSmall="/Images/Icons/ChangeListLevel16.png" Label="Change List Level" />
													<ribbon:Button Label="Define New Multilevel List..." />
													<ribbon:Button Label="Define New List Style..." />
												</ribbon:Menu>
											</StackPanel>
										</ribbon:SplitButton>
									</ribbon:StackPanel>
								</ribbon:Group>
							</ribbon:Tab>
						</ribbon:Ribbon.Tabs>
					</ribbon:Ribbon>

				</Grid>
			</Border>
		</shared:ShadowChrome>
	</Grid>

</sampleBrowser:ProductItemControl>
