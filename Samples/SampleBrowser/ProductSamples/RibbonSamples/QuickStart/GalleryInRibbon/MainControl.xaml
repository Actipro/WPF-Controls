<sampleBrowser:ProductItemControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mediaImaging="clr-namespace:System.Windows.Media.Imaging;assembly=PresentationCore"
    xmlns:ribbon="http://schemas.actiprosoftware.com/winfx/xaml/ribbon"
	xmlns:ribbonSamplesCommon="clr-namespace:ActiproSoftware.ProductSamples.RibbonSamples.Common" 
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Actipro Ribbon provides extremely flexible support for gallery implementations.
					This sample shows a subset of the features found in galleries, most notably use of the RibbonGallery control.
					<LineBreak /><LineBreak />
					This gallery sample shows how you can use a regular ItemTemplate to render gallery items.
					In this sample, the RibbonGallery is bound to an array of BitmapImage objects.
					An ItemTemplate is used to render the items via a contained Image control.
					While in this sample we are simply displaying images representing the various styles,
					in a production application you may wish to custom draw the items (see the Gallery with Custom Draw Items QuickStart) instead.
					<LineBreak /><LineBreak />
					RibbonGallery controls always have a popup that contains a PopupGallery.
					The PopupGallery also displays all of the items found in the parent RibbonGallery.
					The easiest way to configure the PopupGallery is to bind its ItemTemplate and
					ItemsSource properties to the corresponding properties on the parent RibbonGallery.
					<LineBreak /><LineBreak />
					Note that this PopupGallery has its InitialColumnCount set to 4 meaning
					that by default, 4 columns of items will be displayed.
					A requirement for ribbon UI is that the popup for a RibbonGallery must be at least as wide as the RibbonGallery.
					Therefore in this sample, you may find the popup is wider than 4 columns initially to meet this requirement.
					Resize the window to be very thin to see what happens when the RibbonGallery doesn't force this to take place.
					You should see 4 columns of items in that case.
					<LineBreak /><LineBreak />
					Since we also set the RibbonGallery's PopupResizeMode to Both, the
					end user may resize the popup both horizontally and vertically.
					<LineBreak /><LineBreak />
					The RibbonGallery control provides a number of variants that make it really fit nicely into parent Ribbon resizing.
					By default, when the parent Group has a Small variant size, the RibbonGallery
					will collapse and render similar to a PopupButton.  
					<LineBreak /><LineBreak />
					When the parent Group has a Medium variant size, the RibbonGallery starts to display items.  
					It will display a varying number of items based upon the available space
					and within the range of its MediumVariantColumnCount and LargeVariantColumnCount property values.
					<LineBreak /><LineBreak />
					When the parent Group has a Large variant size,
					it will display more and more items until all available space is filled up.
					The minimum number of items to display are based on the LargeVariantColumnCount property.
					<LineBreak /><LineBreak />
					With the VariantBehavior property, you have total control over whether the 
					RibbonGallery can collapse and/or perform auto-sizing in the Large variant.
					<LineBreak /><LineBreak />
					This demo doesn't show the variants in action since more groups are required to really see how they interact.
					However you can see this feature in the Document Editor sample.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelFullStyle}">

		<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
			<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
					Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<TextBox Grid.Row="1" BorderThickness="0" AcceptsReturn="True" />

					<!-- Ribbon Control -->
					<ribbon:Ribbon x:Name="ribbon">
						<!-- 
							Use pre-defined WordApplicationMenu type in the sample project so that we don't have redundant code 
							in this sample that takes away from the focus of the sample
						-->
						<ribbon:Ribbon.ApplicationMenu>
							<ribbonSamplesCommon:WordApplicationMenu />	
						</ribbon:Ribbon.ApplicationMenu>
						<ribbon:Ribbon.QuickAccessToolBarItems>
							<ribbon:Button ImageSourceSmall="/Images/Icons/Save16.png" Label="Save" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Undo16.png" Label="Undo" />
							<ribbon:Button ImageSourceSmall="/Images/Icons/Redo16.png" Label="Redo" />
						</ribbon:Ribbon.QuickAccessToolBarItems>
						<ribbon:Ribbon.Tabs>
							<ribbon:Tab Label="Home">
								<ribbon:Group ImageSourceSmall="/Images/Icons/QuickStyles16.png" Label="Styles" KeyTipAccessText="ZS">
									<ribbon:Group.Variants>
										<ribbon:GroupVariant Priority="20" Size="Medium" />
										<ribbon:GroupVariant Priority="60" Size="Small" />
										<ribbon:GroupVariant Priority="70" Size="Collapsed" />
									</ribbon:Group.Variants>
									<ribbon:RibbonGallery ImageSourceLarge="/Images/Icons/QuickStyles32.png" Label="Quick Styles" KeyTipAccessText="L"
										ScreenTipDescription="Format titles, quotes, and other text using the styles in this gallery." IsSelectionHighlightVisible="False">
										<ribbon:RibbonGallery.ItemsSource>
											<x:Array Type="{x:Type mediaImaging:BitmapImage}">
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Normal" UriSource="/Images/RibbonGalleries/Styles/Normal.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="No Spacing" UriSource="/Images/RibbonGalleries/Styles/NoSpacing.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Heading 1" UriSource="/Images/RibbonGalleries/Styles/Heading1.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Heading 2" UriSource="/Images/RibbonGalleries/Styles/Heading2.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Title" UriSource="/Images/RibbonGalleries/Styles/Title.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Subtitle" UriSource="/Images/RibbonGalleries/Styles/SubTitle.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Subtle Emphasis" UriSource="/Images/RibbonGalleries/Styles/SubtleEmphasis.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Emphasis" UriSource="/Images/RibbonGalleries/Styles/Emphasis.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Intense Emphasis" UriSource="/Images/RibbonGalleries/Styles/IntenseEmphasis.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Strong" UriSource="/Images/RibbonGalleries/Styles/Strong.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Quote" UriSource="/Images/RibbonGalleries/Styles/Quote.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Intense Quote" UriSource="/Images/RibbonGalleries/Styles/IntenseQuote.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Subtle Reference" UriSource="/Images/RibbonGalleries/Styles/SubtleReference.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Intense Reference" UriSource="/Images/RibbonGalleries/Styles/IntenseReference.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Book Title" UriSource="/Images/RibbonGalleries/Styles/BookTitle.png" />
												<mediaImaging:BitmapImage ribbon:ScreenTipService.ScreenTipHeader="Paragraph" UriSource="/Images/RibbonGalleries/Styles/ListParagraph.png" />
											</x:Array>
										</ribbon:RibbonGallery.ItemsSource>
										<ribbon:RibbonGallery.ItemTemplate>
											<DataTemplate>
												<Image Margin="2" Source="{Binding BindsDirectlyToSource=True}" Stretch="None" />
											</DataTemplate>
										</ribbon:RibbonGallery.ItemTemplate>
										<ribbon:RibbonGallery.PopupContent>
											<StackPanel>
												<ribbon:PopupGallery InitialColumnCount="4" IsSelectionHighlightVisible="False"
													ItemTemplate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ribbon:RibbonGallery}}, Path=ItemTemplate}"										
													ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ribbon:RibbonGallery}}, Path=ItemsSource}"
													/>
												<ribbon:Separator />
												<ribbon:Menu>
													<ribbon:Button Label="Save Selection as a New Quick Style..." />
													<ribbon:Button ImageSourceSmall="/Images/Icons/ClearFormatting16.png" Label="Clear Formatting" />
													<ribbon:Button ImageSourceSmall="/Images/Icons/ApplyStyles16.png" Label="Apply Styles..." />
												</ribbon:Menu>
											</StackPanel>
										</ribbon:RibbonGallery.PopupContent>
									</ribbon:RibbonGallery>
									<ribbon:PopupButton ImageSourceLarge="/Images/Icons/ChangeStyles32.png" Label="Change Styles" KeyTipAccessText="G" />
								</ribbon:Group>
							</ribbon:Tab>
						</ribbon:Ribbon.Tabs>
					</ribbon:Ribbon>
		
				</Grid>
			</Border>
		</shared:ShadowChrome>
	</Grid>

</sampleBrowser:ProductItemControl>
