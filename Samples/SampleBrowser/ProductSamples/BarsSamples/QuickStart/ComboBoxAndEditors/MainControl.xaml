<sampleBrowser:ProductItemControl 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"	
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:local="clr-namespace:ActiproSoftware.ProductSamples.BarsSamples.QuickStart.ComboBoxAndEditors"
	>

	<!-- Sample Side Bar Content -->
	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderExpanderStyle}" Header="COMBOBOX PREVIEW VALUE">
				<StackPanel>
					<TextBlock Text="This value is currently being previewed by a BarComboBox:" TextWrapping="Wrap" />
					<TextBlock Margin="0,7,0,0" Text="{Binding Mode=OneWay, ElementName=sampleXamlControl, Path=ComboboxPreviewLabel}" FontWeight="Bold" />
				</StackPanel>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					BarComboBox is a control that can be used with Actipro's Ribbon and toolbars to provide combobox-like functionality.
					Its popup content is presented as a menu where the traditional combobox items are managed by a BarMenuGallery.
					This means all the great functionality of BarMenuGallery can also be applied to the popup of BarComboBox. 
					That includes previewing items, filtering, and even showing additional menu items below the gallery items.
					Hover over a gallery item in any BarComboBox popup to see its preview value displayed above.
					<LineBreak /><LineBreak />
					BarTextBox is a special TextBox implementation that supports executing an ICommand when its value is changed and it loses focus,
					or when the Enter key is pressed.
					<LineBreak /><LineBreak />
					This sample also shows several examples of how other external controls like our Editors product's edit boxes can be used
					within the Ribbon.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleScrollViewerStyle}" HorizontalScrollBarVisibility="Disabled">
		<StackPanel Style="{StaticResource SamplePanelFullStyle}">

			<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

					<!-- MVVM-Based Ribbon Sample Control -->
					<local:SampleMvvmControl ComboboxPreviewLabel="{Binding Mode=TwoWay, ElementName=sampleXamlControl, Path=ComboboxPreviewLabel}" Height="250" />

				</Border>
			</shared:ShadowChrome>

			<shared:ShadowChrome Margin="0,40,0,0" Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

					<!-- XAML-Based Ribbon Sample Control -->
					<local:SampleXamlControl x:Name="sampleXamlControl" Height="250" />

				</Border>
			</shared:ShadowChrome>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
