<!--

RIBBON GETTING STARTED SERIES - STEP 6

STEP SUMMARY:

	Replace the editor control's default ContextMenu with one based on Bars
	controls for a consistent user experience. Improve the default context
	menu by adding support for the 'SelectAll' command.
	
CHANGES SINCE LAST STEP:
	
	Assigned the RichTextBoxExtended.ContextMenu property an instance of
	BarsContextMenu whose items are bound to the sample window view model.

	Prior sample comments were removed/condensed.
	
EXPECTED OPERATION:
	
	When this sample window is opened, right-click the editor control to display the context
	menu. Instead of the default context menu with only Cut/Copy/Paste commands, a Bars context
	menu will be displayed instead.
	
	The menu items will display with the same images registered for Ribbon, and the additional
	"Select All" command will be displayed.

-->

<bars:RibbonWindow
	x:Class="ActiproSoftware.ProductSamples.BarsSamples.QuickStart.GettingStarted.Step06.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:bars="http://schemas.actiprosoftware.com/winfx/xaml/bars"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:samplesCommon="clr-namespace:ActiproSoftware.ProductSamples.BarsSamples.Common"
	xmlns:gettingStartedCommon="clr-namespace:ActiproSoftware.ProductSamples.BarsSamples.QuickStart.GettingStarted.Common"
    Title="Actipro Ribbon Sample" Height="450" Width="800"
	ResizeMode="CanResizeWithGrip"
	FocusManager.FocusedElement="{Binding ElementName=editor}"
	>

	<bars:RibbonContainerPanel>

		<!-- Ribbon Control -->
		<bars:Ribbon DataContext="{Binding Ribbon}" Style="{StaticResource {x:Static themes:BarsMvvmResourceKeys.RibbonStyle}}" />

		<!-- Window Content -->
		<DockPanel>

			<!-- Configure common StatusBar that is unrelated to this sample -->
			<gettingStartedCommon:CommonStatusBar DockPanel.Dock="Bottom" SampleCodePath="/Step06/MainWindow" />

			<!-- Configure editor -->
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Focusable="False">
				<shared:ShadowChrome Margin="32,20" RenderMode="ShaderEffectsRequired" Elevation="6" ShadowOpacity="0.1">
					<Border MaxWidth="690" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderLowBrushKey}}">
						<samplesCommon:RichTextBoxExtended x:Name="editor">
							
							<!--
							SAMPLE NOTE 6.1:
								A BarContextMenu derives from the WPF ContextMenu and can be used anywhere a standard
								ContextMenu is used.
							
								For this sample application, the BarsContextMenu.ItemsSource is bound to instances
								of the same view models that are used to populate the Ribbon controls. The control
								templates are contextually-aware and will generate a control that is appropriate for
								use on a ContextMenu (e.g., MenuItem controls).
							
								The BarContextMenu.ItemContainerTemplateSelector must be configured the same way
								as Ribbon.ItemContainerTemplateSelector for view models to be properly translated
								to the controls.
							-->
							<samplesCommon:RichTextBoxExtended.ContextMenu>
								<bars:BarContextMenu ItemsSource="{Binding EditorContextMenuItems}"
													 ItemContainerTemplateSelector="{Binding Ribbon.ItemContainerTemplateSelector}">
								</bars:BarContextMenu>
							</samplesCommon:RichTextBoxExtended.ContextMenu>
							
						</samplesCommon:RichTextBoxExtended>
					</Border>
				</shared:ShadowChrome>
			</ScrollViewer>

		</DockPanel>


	</bars:RibbonContainerPanel>
	
</bars:RibbonWindow>
