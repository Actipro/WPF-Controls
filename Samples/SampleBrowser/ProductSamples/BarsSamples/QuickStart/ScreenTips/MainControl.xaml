<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.BarsSamples.QuickStart.ScreenTips.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ActiproSoftware.ProductSamples.BarsSamples.QuickStart.ScreenTips"
    xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"	
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<!-- Sample Side Bar Content -->
	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Actipro Ribbon includes powerful screen tip functionality via its ScreenTip class.
					Screen tips are essentially tooltips that provide a more robust user interface capable of describing the control
					for which it is displayed via text, images, or other content.
					<LineBreak /><LineBreak />
					Hover over each of the buttons in the Ribbon to see various implementations of screen tips. The XAML and MVVM tabs
					demonstrate how screen tips are configured when using either XAML or the Model-View-ViewModel (MVVM) pattern to
					define controls.
					<LineBreak /><LineBreak />
					One of the best features about screen tips is that our implementation doesn't restrict you to using them on the Ribbon controls.
					In fact, you can use them anywhere you like! To do this, simply assign a ScreenTip instance to the ToolTip property of any control.
					The TextBox displayed below the Ribbon in this sample is configured with a screen tip.
					<LineBreak /><LineBreak />
					Screen tip content can be dynamically generated.  This allows you to modify the screen tip data on demand to best reflect
					the current state of the control.
					<LineBreak /><LineBreak />
					To do this, process the ScreenTipService.Current.ScreenTipOpening event.
					That event fires before a screen tip is about to display for a control.
					In the event handler, you may change any screen tip properties before they are rendered to the end user.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleScrollViewerStyle}" HorizontalScrollBarVisibility="Disabled">
		<StackPanel Style="{StaticResource SamplePanelFullStyle}">

			<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

					<!-- MVVM-Based Ribbon Sample Control -->
					<local:SampleMvvmControl Height="250" />

				</Border>
			</shared:ShadowChrome>

			<shared:ShadowChrome Margin="0,40,0,0" Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

					<!-- XAML-Based Ribbon Sample Control -->
					<local:SampleXamlControl Height="250" />

				</Border>
			</shared:ShadowChrome>
			
		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
