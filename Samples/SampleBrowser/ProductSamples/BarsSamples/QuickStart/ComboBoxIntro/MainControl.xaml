<sampleBrowser:ProductItemControl 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"	
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:local="clr-namespace:ActiproSoftware.ProductSamples.BarsSamples.QuickStart.ComboBoxIntro"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<!-- Define the options used by this sample -->
		<local:OptionsViewModel x:Key="SampleOptions" />

	</sampleBrowser:ProductItemControl.Resources>
	
	<!--
	
	TODO: Additional functionality for Combobox demo
		- Other controls (e.g., TextBox, 3rd-party editor, etc.)	
	-->
	
	<!-- Sample Side Bar Content -->
	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" IsValueReadOnly="True" Value="{Binding Mode=OneWay, Source={StaticResource SampleOptions}, Path=ComboboxPreviewLabel}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, Source={StaticResource SampleOptions}, Path=Color}" DisplayName="Editbox color" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, Source={StaticResource SampleOptions}, Path=Date}" DisplayName="Editbox date" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>
			
			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The BarComboBox is a built-in control that can be used with Actipro Ribbon to provide combobox-like functionality.
					<LineBreak /><LineBreak />
					The popup content is presented as a menu where the traditional combobox items are managed by a BarMenuGallery.
					This means all the great functionality of BarMenuGallery can also be applied to the popup of BarComboBox. That
					includes previewing items, filtering, and even showing additional menu items below the gallery items.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleScrollViewerStyle}" HorizontalScrollBarVisibility="Disabled">
		<StackPanel Style="{StaticResource SamplePanelFullStyle}">

			<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

					<!-- MVVM-Based Ribbon Sample Control -->
					<local:SampleMvvmControl Options="{StaticResource SampleOptions}" Height="250" />

				</Border>
			</shared:ShadowChrome>

			<shared:ShadowChrome Margin="0,40,0,0" Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
				<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
						Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

					<!-- XAML-Based Ribbon Sample Control -->
					<local:SampleXamlControl Options="{StaticResource SampleOptions}" Height="250" />

				</Border>
			</shared:ShadowChrome>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
