<local:SampleControlBase x:Class="ActiproSoftware.ProductSamples.BarsSamples.QuickStart.ComboBoxIntro.SampleXamlControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:bars="http://schemas.actiprosoftware.com/winfx/xaml/bars"
	xmlns:barsmvvm="http://schemas.actiprosoftware.com/winfx/xaml/barsmvvm"
	xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:local="clr-namespace:ActiproSoftware.ProductSamples.BarsSamples.QuickStart.ComboBoxIntro"
	mc:Ignorable="d" 
	d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- This XAML resource dictionary has the common resources for both the MVVM- and XAML-based samples -->
				<ResourceDictionary Source="CommonDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>

	</UserControl.Resources>
	
	<bars:RibbonContainerPanel>

		<bars:Ribbon IsApplicationButtonVisible="False" QuickAccessToolBarMode="Hidden">
			
			<!-- 
				BarComboBox is a special control that behaves like a ComboBox and uses a BarMenuGallery to display the
				items in the popup. It's essentially a BarPopupButton with an editable or non-editable textual element.
			
				All BarMenuGallery functionality can be applied to a BarComboBox popup including categories and filtering.
			-->

			<bars:RibbonTabItem Key="XamlSamples" Label="XAML Samples">
				<bars:RibbonGroup Key="BasicSamples">
					<bars:RibbonControlGroup ItemVariantBehavior="AlwaysMedium">
						
						<!-- Editable -->
						<bars:BarComboBox Key="Editable" TextPath="Label" UnmatchedTextCommand="{Binding ComboBoxUnmatchedTextCommand}"
										  ToolTip="A basic, editable combobox sample.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="EditableGallery" Command="{Binding ComboBoxGalleryCommand}" IsSynchronizedWithCurrentItem="True"
													 ItemsSource="{Binding ComboBoxPersonItems}"
													 ItemTemplate="{StaticResource PersonComboBoxGalleryItemTemplate}"/>
							</bars:BarComboBox.Items>
						</bars:BarComboBox>

						<!-- Read-Only -->
						<bars:BarComboBox Key="ReadOnly" Label="Read-only" IsReadOnly="True" TextPath="Label" UnmatchedTextCommand="{Binding ComboBoxUnmatchedTextCommand}"
										  ToolTip="A basic, editable and read-only combobox sample.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="EditableGallery" Command="{Binding ComboBoxGalleryCommand}" IsSynchronizedWithCurrentItem="True"
													 ItemsSource="{Binding ComboBoxPersonItems}"
													 ItemTemplate="{StaticResource PersonComboBoxGalleryItemTemplate}"/>
							</bars:BarComboBox.Items>
						</bars:BarComboBox>

						<!-- Non-Editable -->
						<bars:BarComboBox Key="NonEditable" Label="Non-Editable" IsEditable="False" TextPath="Label"
										  ToolTip="A basic, non-editable combobox sample."
										  >
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="NonEditableGallery" Command="{Binding ComboBoxGalleryCommand}" IsSynchronizedWithCurrentItem="True"
													 ItemsSource="{Binding ComboBoxPersonItems}"
													 ItemTemplate="{StaticResource PersonComboBoxGalleryItemTemplate}"/>
							</bars:BarComboBox.Items>
						</bars:BarComboBox>

					</bars:RibbonControlGroup>
				</bars:RibbonGroup>
				<bars:RibbonGroup Key="CategorizedSamples">
					<bars:RibbonControlGroup ItemVariantBehavior="AlwaysMedium">

						<!-- Categorized items in a single column -->
						<bars:BarComboBox Key="CategorizedSingleColumn" Label="Single-Column" TextPath="Label" UnmatchedTextCommand="{Binding ComboBoxUnmatchedTextCommand}"
										  ToolTip="A combobox with items categorized and displayed in a single column.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="CategorizedSingleColumnGallery" CanCategorize="True" CategoryPropertyName="Category" Command="{Binding ComboBoxGalleryCommand}"
													 MaxColumnCount="1"
													 CategorizedItemsSource="{Binding ComboBoxPersonItems}"
													 ItemTemplate="{StaticResource PersonComboBoxGalleryItemTemplate}" />
							</bars:BarComboBox.Items>
						</bars:BarComboBox>
						
						<!-- Categorized items in multiple columns -->
						<bars:BarComboBox Key="CategorizedMultiColumn" Label="Multi-Column" TextPath="Label" UnmatchedTextCommand="{Binding ComboBoxUnmatchedNumberTextCommand}"
										  ToolTip="A combobox with items categorized and displayed using multiple columns.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="CategorizedMultiColumnGallery" CanCategorize="True" CategoryPropertyName="Category" Command="{Binding ComboBoxGalleryCommand}"
													 MinColumnCount="5" MaxColumnCount="5"
													 CategorizedItemsSource="{Binding ComboBoxNumberItems}"
													 ItemTemplate="{StaticResource NumberComboBoxGalleryItemTemplate}" />
							</bars:BarComboBox.Items>
						</bars:BarComboBox>

						<!-- Categorized/Filtered items with menu item appearance consistent with large menu items -->
						<bars:BarComboBox Key="MenuStyle" TextPath="Label"
										  ToolTip="A combobox using a menu-like appearance for items, filtering, and an additional menu item below the list of combobox items.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="MenuStyleGallery" MaxColumnCount="1" CanFilter="True" CanCategorize="True" CategoryPropertyName="Category" Command="{Binding ComboBoxGalleryCommand}"
													 UseMenuItemAppearance="True"
													 CategorizedItemsSource="{Binding ComboBoxColorItems}"
													 ItemTemplate="{StaticResource LargeMenuComboBoxGalleryItemTemplate}"/>
								<bars:BarMenuItem Label="More colors..." Command="{Binding NotImplementedCommand}" />
							</bars:BarComboBox.Items>
						</bars:BarComboBox>
						
					</bars:RibbonControlGroup>
				</bars:RibbonGroup>
				<bars:RibbonGroup Key="FontSamples">
					<bars:RibbonControlGroup ItemVariantBehavior="AlwaysMedium">

						<!-- Font family -->
						<bars:BarComboBox Key="FontFamily" TextPath="Label" RequestedWidth="120" UnmatchedTextCommand="{Binding ComboBoxUnmatchedTextCommand}"
										  ToolTip="A combobox with system fonts and a category for recently-used fonts.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="FontFamilyGallery" MaxColumnCount="1" CanCategorize="True" CategoryPropertyName="Category" Command="{Binding ComboBoxGalleryCommand}"
													 ResizeMode="Vertical"
													 CategorizedItemsSource="{Binding ComboBoxFontFamilyItems}">
									<bars:BarMenuGallery.ItemTemplateSelector>
										<barsmvvm:BarGalleryItemTemplateSelector />
									</bars:BarMenuGallery.ItemTemplateSelector>
								</bars:BarMenuGallery>
							</bars:BarComboBox.Items>
						</bars:BarComboBox>

						<!-- Font size -->
						<bars:BarComboBox Key="FontSize" TextPath="Label" RequestedWidth="45" UnmatchedTextCommand="{Binding ComboBoxUnmatchedNumberTextCommand}"
										  ToolTip="A combobox with common font sizes.">
							<bars:BarComboBox.Items>
								<bars:BarMenuGallery Key="FontSizeGallery" MaxColumnCount="1" Command="{Binding ComboBoxGalleryCommand}"
													 ResizeMode="Vertical"
													 CategorizedItemsSource="{Binding ComboBoxFontSizeItems}" IsSynchronizedWithCurrentItem="True">
									<bars:BarMenuGallery.ItemTemplateSelector>
										<barsmvvm:BarGalleryItemTemplateSelector />
									</bars:BarMenuGallery.ItemTemplateSelector>
								</bars:BarMenuGallery>
							</bars:BarComboBox.Items>
						</bars:BarComboBox>

					</bars:RibbonControlGroup>
				</bars:RibbonGroup>
				<bars:RibbonGroup Key="OtherSamples">
					<bars:RibbonControlGroup ItemVariantBehavior="AlwaysMedium">

						<!-- Textbox -->
						<bars:BarTextBox Key="Textbox" RequestedWidth="120" Text="A text value"
										 Command="{Binding TextBoxCommitCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
										 ToolTip="A textbox control that commits changed text on Enter or focus loss." />

						<editors:ColorEditBox bars:BarControlService.Key="Color" Width="100"
											  bars:BarControlService.HasExternalHeader="True" bars:BarControlService.Label="Color" 
											  bars:BarControlService.CanCloneToRibbonQuickAccessToolBar="True"
											  UsageContext="ToolBar" MinHeight="24" themes:ThemeProperties.CornerRadius="3"
											  Value="{Binding Options.Color}" IsAlphaEnabled="False" 
											  ToolTip="An editbox from Actipro Editors for selecting a Color." />

						<editors:DateEditBox bars:BarControlService.Key="Date" Width="100"
											 bars:BarControlService.HasExternalHeader="True" bars:BarControlService.Label="Date"
											 bars:BarControlService.CanCloneToRibbonQuickAccessToolBar="True"
											 UsageContext="ToolBar" MinHeight="24" themes:ThemeProperties.CornerRadius="3"
											 Value="{Binding Options.Date}"
											 ToolTip="An editbox from Actipro Editors for selecting a date." />

					</bars:RibbonControlGroup>
				</bars:RibbonGroup>
			</bars:RibbonTabItem>

		</bars:Ribbon>
		
		<!-- TextBox -->
		<TextBox Margin="0,10,0,0" Padding="10" BorderThickness="0" AcceptsReturn="True">
			<shared:HintProperties.Hint>
				<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Ribbon defined with XAML" />
			</shared:HintProperties.Hint>

		</TextBox>

	</bars:RibbonContainerPanel>


</local:SampleControlBase>
