<sampleBrowser:ProductItemControl 
	x:Name="rootSampleControl"
	x:Class="ActiproSoftware.ProductSamples.BarsSamples.QuickStart.SerializationMvvm.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids" 
    xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"	
	xmlns:syntaxeditor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:bars="http://schemas.actiprosoftware.com/winfx/xaml/bars"
	xmlns:barsmvvm="http://schemas.actiprosoftware.com/winfx/xaml/barsmvvm"
	FocusManager.FocusedElement="{Binding ElementName=xmlDataEditor}"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=OptionsModel.LayoutMode}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=OptionsModel.UserInterfaceDensity}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=OptionsModel.MinimizedState}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=OptionsModel.QuickAccessToolBarLocation}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=OptionsModel.QuickAccessToolBarMode}" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=OptionsModel.QuickAccessToolBarItems}" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>
			
			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Actipro Ribbon provides many options to customize the layout. By using
					the serialization features, it is easy to save the current layout and restore it later.
					<LineBreak /><LineBreak />
					When users customize the Ribbon in an application, they will expect those customizations
					to be restored the next time the application is launched.
					<LineBreak /><LineBreak />
					Developers have full control over which settings are saved and restored during
					serialization. This will ensure that if an application is not designed to support
					a feature like the Simplified layout, the serializer will ignore those settings
					even if they are present in the serialized data.
					<LineBreak /><LineBreak />
					Make changes to the Ribbon layout like moving the location of the Quick Access Toolbar,
					changing the user interface density, or minimzing the Ribbon. Save the layout at any
					time and Restore it later. Use the Restore Original button to revert all changes
					back to the state at the time the sample was loaded.
					<LineBreak /><LineBreak />
					Use the Sample Options to toggle which settings are processed when saving or restoring.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelFullStyle}">

		<shared:ShadowChrome Elevation="16" ShadowOpacity="{DynamicResource {x:Static themes:AssetResourceKeys.ShadowOpacitySoftDoubleKey}}">
			<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}"
					Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}">

				<bars:RibbonContainerPanel>
					
					<!-- Ribbon Control -->
					<bars:Ribbon x:Name="ribbon" ItemsSource="{Binding RibbonTabs}"
								 IsApplicationButtonVisible="False"
								 QuickAccessToolBarItemAdding="OnQuickAccessToolBarItemAdding">
						
						<bars:Ribbon.QuickAccessToolBarContent>
							<bars:RibbonQuickAccessToolBar CommonItems="{Binding QuickAccessToolBarCommonItems}" ItemsSource="{Binding QuickAccessToolBarActiveItems}" />
						</bars:Ribbon.QuickAccessToolBarContent>

						<!-- Configure pre-defined template selector for Bars view models -->
						<bars:Ribbon.ItemContainerTemplateSelector>
							<barsmvvm:BarControlTemplateSelector/>
						</bars:Ribbon.ItemContainerTemplateSelector>

					</bars:Ribbon>
					
					<!-- Serialized Data Editor -->
					<syntaxeditor:SyntaxEditor x:Name="xmlDataEditor" BorderThickness="0" Margin="0,10,0,0"
											   AreLineModificationMarksVisible="False"
											   CanSplitHorizontally="False"
											   IsLineNumberMarginVisible="True"
											   IsOutliningMarginVisible="False"
											   HorizontalScrollBarVisibility="Auto"
											   VerticalScrollBarVisibility="Auto"
											   >
						<syntaxeditor:EditorDocument xml:space="preserve" TabSize="2">
							<syntaxeditor:EditorDocument.Language>
								<syntaxeditor:XmlSyntaxLanguage />
							</syntaxeditor:EditorDocument.Language>
						</syntaxeditor:EditorDocument>
					</syntaxeditor:SyntaxEditor>
				</bars:RibbonContainerPanel>

			</Border>
		</shared:ShadowChrome>
	</Grid>

</sampleBrowser:ProductItemControl>
