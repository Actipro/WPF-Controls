<sampleBrowser:ProductItemControl 
	x:Name="rootSampleControl"
	x:Class="ActiproSoftware.ProductSamples.BarCodeSamples.QuickStart.DrawingContext.MainControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids" 
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"	
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					A lot of times it is useful to be able to render a bar code directly onto a DrawingContext.
					This can be done simply by calling the Render method of the desired symbology class.
					<LineBreak /><LineBreak />
					In this demo, press the Render to DrawingContext button to generate a Code 39 Extended
					symbology and render it directly onto a CustomDrawElement control.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<ScrollViewer Style="{StaticResource SampleVerticalScrollViewerStyle}">
		<StackPanel Style="{StaticResource SamplePanelWideStyle}">

			<TextBlock Text="INPUT" Style="{StaticResource SampleSectionHeadingTextBlockStyle}" />

			<sampleBrowser:SampleOptionsPropertyGrid Margin="0,20,0,0" MaxWidth="{StaticResource SampleThinMaxWidth}">
				<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=Value}" />
				<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=rootSampleControl, Path=ValueDisplayStyle}" />
				<grids:PropertyModel>
					<grids:PropertyModel.ValueTemplate>
						<DataTemplate>
							<Button Content="Render to DrawingContext" HorizontalAlignment="Left" Click="OnRenderToDrawingContextButtonClick" />
						</DataTemplate>
					</grids:PropertyModel.ValueTemplate>
				</grids:PropertyModel>
			</sampleBrowser:SampleOptionsPropertyGrid>

			<Separator Style="{StaticResource SampleSectionHorizontalRuleStyle}" />

			<TextBlock Text="OUTPUT" Style="{StaticResource SampleSectionHeadingTextBlockStyle}" />

			<sampleBrowser:LabeledCardControl Margin="0,20,0,0" Background="#ffffff" HorizontalAlignment="Center">
				<shared:CustomDrawElement x:Name="customDrawElement" CustomDraw="OnRenderCustomDrawElement" />
			</sampleBrowser:LabeledCardControl>

		</StackPanel>
	</ScrollViewer>

</sampleBrowser:ProductItemControl>
