<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.GridsSamples.Demo.Toolbox.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.Demo.Toolbox"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<!-- 
			CustomTemplateSelector - This demo has created a custom template selector for the Toolbox to easily
				allow for different data templates to be used for the different types of nodes present in the tree.
				This resource will be assigned to the 'TreeListBox.ItemTemplateSelector' property.
		-->
		<sample:CustomTemplateSelector x:Key="CustomTemplateSelector">

			<!-- Category -->
			<sample:CustomTemplateSelector.CategoryTemplate>
				<DataTemplate>
					<StackPanel Orientation="Horizontal">
						<TextBlock Margin="0,0,0,1" Text="{Binding Name}" FontWeight="Bold" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
					</StackPanel>
				</DataTemplate>
			</sample:CustomTemplateSelector.CategoryTemplate>

			<!-- Control -->
			<sample:CustomTemplateSelector.ControlTemplate>
				<DataTemplate>
					<StackPanel Orientation="Horizontal">
						<shared:DynamicImage Margin="0,1,4,1" Width="16" Height="16" Source="{Binding ImageSource}" Stretch="None" VerticalAlignment="Center" />
						<TextBlock Margin="0,0,0,1" Text="{Binding Name}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
					</StackPanel>
				</DataTemplate>
			</sample:CustomTemplateSelector.ControlTemplate>

			<!-- Empty Placeholder (for a Category that has no Controls)-->
			<sample:CustomTemplateSelector.EmptyPlaceholderTemplate>
				<DataTemplate>
					<TextBlock Margin="0,0,0,1" Text="{Binding Name}" FontStyle="Italic" TextWrapping="Wrap" VerticalAlignment="Center" />
				</DataTemplate>
			</sample:CustomTemplateSelector.EmptyPlaceholderTemplate>

		</sample:CustomTemplateSelector>

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					A Toolbox is a tool window often used to provide quick access to a collection of items.
					This demo shows how a TreeListBox can be used to create a Toolbox similar to Visual Studio where
					user controls are grouped by categories. The document area is representative of a UI designer
					where controls can be dragged from the Toolbox and dropped onto the varying surfaces of the designer.
					<LineBreak /><LineBreak />
					A custom template selector is used to select the DataTemplate for three different kinds of items:
					category, control, and empty text placeholder.
					<LineBreak /><LineBreak />
					A custom item adapter is used to enable drag-and-drop scenarios within the Toolbox control and
					onto the simulated designer surface.
					<LineBreak /><LineBreak />
					This demo also illustrates dynamically generating a context menu for the items in the toolbox
					and how to automatically display an informational placeholder for a tree node that would otherwise
					be empty.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<!-- DockSite -->
	<docking:DockSite x:Name="dockSite">
		<docking:SplitContainer>

			<docking:ToolWindowContainer>

				<!-- Toolbox -->
				<docking:ToolWindow x:Name="toolWindow" Title="Toolbox" ImageSource="/Images/Icons/Toolbox16.png" ContainerDockedSize="300,200">
					<grids:TreeListBox
						x:Name="treeListBox"
						BorderThickness="0"
						IsRootItemVisible="False"
						IndentIncrement="0"
						HorizontalContentAlignment="Stretch"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						AllowDrop="True"
						CanDragItems="True"
						ItemTemplateSelector="{StaticResource CustomTemplateSelector}"
						ItemMenuRequested="OnToolboxItemMenuRequested">
						<grids:TreeListBox.ItemAdapter>
							<!-- The CustomTreeListBoxItemAdapter for this demo is primarily used to control drag-and-drop functionality -->
							<sample:CustomTreeListBoxItemAdapter />
						</grids:TreeListBox.ItemAdapter>
					</grids:TreeListBox>
				</docking:ToolWindow>

			</docking:ToolWindowContainer>

			<!-- Workspace -->
			<docking:Workspace>
				<docking:TabbedMdiHost x:Name="tabbedMdiHost">
					<docking:TabbedMdiContainer>
						<docking:DocumentWindow x:Name="documentWindow" Title="UI Designer" ImageSource="/Images/Icons/Shapes16.png">
							<Grid Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundLowBrushKey}}">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="4" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0"
										BorderThickness="0,0,0,1"
										BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderLowBrushKey}}"
										Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundLowerBrushKey}}"
										AllowDrop="True"
										Drop="OnDesignerDrop">
									<TextBlock Margin="30,0" TextWrapping="WrapWithOverflow" TextAlignment="Center" VerticalAlignment="Center" FontStyle="Italic" Text="Drag and drop controls from the toolbox to this simulated UI designer canvas" />
								</Border>
								<TextBox Grid.Row="2"
										 BorderThickness="0,1,0,0"
										 BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderLowBrushKey}}"
										 AllowDrop="True"
										 TextWrapping="Wrap"
										 Text="Dropping a control on the designer canvas can behave differently than dropping a control on this text control." />
							</Grid>
						</docking:DocumentWindow>
					</docking:TabbedMdiContainer>
				</docking:TabbedMdiHost>
			</docking:Workspace>

		</docking:SplitContainer>

	</docking:DockSite>

</sampleBrowser:ProductItemControl>
