<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridItemMenuCustomization.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridItemMenuCustomization"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<sample:TestObject x:Key="TestObject" />

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderOptionsExpanderStyle}">
				<sampleBrowser:SampleOptionsPropertyGrid>
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=propGrid, Path=IsDefaultItemContextMenuEnabled}" DisplayName="Default item context menu enabled" />
					<grids:PropertyModel CanAutoConfigure="True" Value="{Binding Mode=TwoWay, ElementName=propGrid, Path=AreClipboardMenuItemsEnabled}" DisplayName="Clipboard menu items enabled" />
				</sampleBrowser:SampleOptionsPropertyGrid>
			</Expander>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The context menu displayed for property grid items can be easily customized by handling the ItemMenuRequested event.
					Additionally, the IsDefaultItemContextMenuEnabled property can be set to false to disable the default context menu that is constructed for property grid items.
					<LineBreak /><LineBreak />
					This example shows a property grid with a custom context menu item added for category and property items.
					Display the context menu for each property grid item to see the custom menu item.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelWideStyle}">

		<grids:PropertyGrid x:Name="propGrid" MaxWidth="{StaticResource SampleThinMaxWidth}"
							DataObject="{StaticResource TestObject}" CanClearDataObjectOnUnload="True"
							ItemMenuRequested="OnPropertyGridItemMenuRequested">
		</grids:PropertyGrid>

	</Grid>

</sampleBrowser:ProductItemControl>
