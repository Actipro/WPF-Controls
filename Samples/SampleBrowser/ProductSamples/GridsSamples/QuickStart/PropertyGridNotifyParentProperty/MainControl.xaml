<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridNotifyParentProperty.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridNotifyParentProperty"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<sample:ParentObject x:Key="ParentObject" />

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					The property grid supports the NotifyParentPropertyAttribute, which can be used to
					refresh the value of a property when one of its sub-properties is updated. 
					This is useful when the parent property entry displays a summary of the sub-property values.
					<LineBreak /><LineBreak />
					In this example, the ChildObject has two properties: one that will notify the parent property of changes and one that will not. 
					When the parent property is notified of changes, then the parent property can update its value. 
					<LineBreak /><LineBreak />
					Try modifying the WillNotify and WillNotNotify properties to see their effect on the ChildObject.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelWideStyle}">

		<grids:PropertyGrid x:Name="propGrid" MaxWidth="{StaticResource SampleThinMaxWidth}"
							DataObject="{StaticResource ParentObject}" IsCategorized="False" ArePropertiesAutoExpanded="True" CanClearDataObjectOnUnload="True" />

	</Grid>

</sampleBrowser:ProductItemControl>
