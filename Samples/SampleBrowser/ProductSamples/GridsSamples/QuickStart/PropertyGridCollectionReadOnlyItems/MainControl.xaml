<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridCollectionReadOnlyItems.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridCollectionReadOnlyItems"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<sample:ParentObject x:Key="ParentObject" />

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					When using the expandable/editable collections features, the entries in the property grid for the collection items are not marked as read-only.
					This means that the end user can type in a new value, which may or may not result in an error.
					There are several ways to ensure that all or some of the collection items are presented as read-only.
					<LineBreak /><LineBreak />
					This example shows various ways to mark the items as read-only. 
					Select the entries for List 1-5 to see a description of how it accomplishes the task.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelWideStyle}">

		<grids:PropertyGrid x:Name="propGrid" MaxWidth="{StaticResource SampleThinMaxWidth}"
							DataObject="{StaticResource ParentObject}"
							CollectionPropertyDisplayMode="EditableInline" CanSummaryAutoSize="True" SummaryHeight="Auto" CanClearDataObjectOnUnload="True">
		</grids:PropertyGrid>

	</Grid>

</sampleBrowser:ProductItemControl>
