<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.GridsSamples.QuickStart.TreeListBoxChecking.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:common="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.Common"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.QuickStart.TreeListBoxChecking"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	>

	<sampleBrowser:ProductItemControl.Resources>

		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

		<sample:CustomTemplateSelector x:Key="CustomTemplateSelector">
			<sample:CustomTemplateSelector.FieldTemplate>
				<DataTemplate>
					<Grid Margin="-17,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<CheckBox Margin="0,0,4,0" VerticalAlignment="Center"
								  Visibility="{Binding IsCheckable, Converter={StaticResource BooleanToVisibilityConverter}}" 
								  IsChecked="{Binding IsChecked, Mode=TwoWay}" 
								  />

						<TextBlock Grid.Column="1" Text="{Binding Name}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />

						<Button Grid.Column="2" Margin="4,0" Padding="5,0" Content="..." Command="{Binding ShowDialogCommand}"
								Style="{StaticResource {x:Static themes:SharedResourceKeys.ButtonBaseStyleKey}}" />
					</Grid>
				</DataTemplate>
			</sample:CustomTemplateSelector.FieldTemplate>
			<sample:CustomTemplateSelector.FolderTemplate>
				<DataTemplate>
					<StackPanel Orientation="Horizontal">
						<shared:DynamicImage Margin="0,1,4,1" Width="16" Height="16" Source="{Binding ImageSource}" Stretch="None" VerticalAlignment="Center" />
						<TextBlock Margin="0,0,0,1" Text="{Binding Name}" FontWeight="Bold" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
					</StackPanel>
				</DataTemplate>
			</sample:CustomTemplateSelector.FolderTemplate>
		</sample:CustomTemplateSelector>

	</sampleBrowser:ProductItemControl.Resources>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					This sample shows how a TreeListBox can be used to present a list of categorized fields for selection and configuration.
					<LineBreak /><LineBreak />
					A custom template selector is used to select the DataTemplate used for two different kinds of items, one of which is a
					folder and the other a field.
					Folders are simple hierarchy containers while fields have checkboxes in their templates and buttons that can be clicked
					to access an advanced configuration dialog.
					<LineBreak /><LineBreak />
					Double-tapping a field item is handled via an event to toggle the item's checkbox.
					<LineBreak /><LineBreak />
					This sample also shows the use of the AlternationCount property to drive alternating row background colors.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid MaxWidth="{StaticResource SampleThinMaxWidth}" Style="{StaticResource SamplePanelWideStyle}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="5" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="10" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<TextBlock Grid.ColumnSpan="3" Margin="0,0,0,3" Text="Choose required fields:" />
		<grids:TreeListBox x:Name="treeListBox" Grid.Row="1" Grid.ColumnSpan="3" AlternationCount="2"
							ItemTemplateSelector="{StaticResource CustomTemplateSelector}"
							ItemDefaultActionExecuting="OnTreeListBoxItemDefaultActionExecuting"
							>
			<grids:TreeListBox.ItemAdapter>
				<!-- An example of using bindings on the adapter, but it's better to not use bindings if you have a large tree... 
						use method overrides like in DefaultTreeListBoxItemAdapter in that case instead -->
				<grids:TreeListBoxItemAdapter 
					ChildrenBinding="{Binding Children, Mode=OneTime}" 
					IsExpandedBinding="{Binding IsExpanded, Mode=TwoWay}" 
					IsSelectedBinding="{Binding IsSelected, Mode=TwoWay}" 
					/>
			</grids:TreeListBox.ItemAdapter>

			<common:FolderTreeNodeModel Name="Fields">
				<common:FolderTreeNodeModel Name="Customer" IsExpanded="True">
					<sample:FieldTreeNodeModel Name="Name" IsChecked="True" />
					<sample:FieldTreeNodeModel Name="E-mail Address" IsChecked="True" />
					<sample:FieldTreeNodeModel Name="Phone Number" />
				</common:FolderTreeNodeModel>
				<common:FolderTreeNodeModel Name="Address" IsExpanded="True">
					<sample:FieldTreeNodeModel Name="Address (line 1)" />
					<sample:FieldTreeNodeModel Name="Address (line 2)" />
					<sample:FieldTreeNodeModel Name="City" />
					<sample:FieldTreeNodeModel Name="State/Province" />
					<sample:FieldTreeNodeModel Name="Postal Code" />
					<sample:FieldTreeNodeModel Name="Country" IsChecked="True" />
				</common:FolderTreeNodeModel>
				<common:FolderTreeNodeModel Name="Custom" IsExpanded="True">
					<sample:FieldTreeNodeModel Name="Custom Field 1" />
					<sample:FieldTreeNodeModel Name="Custom Field 2" />
					<sample:FieldTreeNodeModel Name="Custom Field 3" />
				</common:FolderTreeNodeModel>
			</common:FolderTreeNodeModel>
		</grids:TreeListBox>

		<Button Grid.Row="3" Content="Check All" Click="OnCheckAllButtonClick" />
		<Button Grid.Row="3" Grid.Column="2" Content="Uncheck All" Click="OnUncheckAllButtonClick" />

	</Grid>

</sampleBrowser:ProductItemControl>
