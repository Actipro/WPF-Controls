<sampleBrowser:ProductItemControl 
	x:Class="ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridDictionaryDataFactory.MainControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
	xmlns:sample="clr-namespace:ActiproSoftware.ProductSamples.GridsSamples.QuickStart.PropertyGridDictionaryDataFactory"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	>

	<sampleBrowser:ProductItemControl.SideBarContent>
		<StackPanel>

			<Expander Style="{StaticResource SampleHeaderDescriptionExpanderStyle}">
				<TextBlock Style="{StaticResource SampleHeaderDescriptionTextBlockStyle}">
					Custom data factories can be used to dynamically generate the entries displayed by a property grid, 
					based on the DataObject(s) and various other settings. 
					Also, static or predefined entries can be specified, which will be merged with any dynamically-generated entries.
					<LineBreak /><LineBreak />
					In this example, a custom data factory is used to display the entries in a Dictionary&lt;TKey, TValue&gt;.
					The dictionary entries can be modified or removed, or new entries can be added using the statically-defined add entry row.
					<LineBreak /><LineBreak />
					Type in a new key and value in the last row and an add button will appear. 
					Click the add button to add an entry into the dictionary.
				</TextBlock>
			</Expander>

		</StackPanel>
	</sampleBrowser:ProductItemControl.SideBarContent>

	<Grid Style="{StaticResource SamplePanelWideStyle}">

		<grids:PropertyGrid x:Name="propGrid" MaxWidth="{StaticResource SampleThinMaxWidth}"
							IsCategorized="False" IsSummaryVisible="False" CanClearDataObjectOnUnload="True">
			<grids:PropertyGrid.Properties>
				<sample:AddEntryPropertyModel>
					<sample:AddEntryPropertyModel.NameTemplate>
						<DataTemplate>
							<TextBox Text="{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
									 Style="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedTextBoxStyleKey}}">
								<shared:HintProperties.HintTemplate>
									<DataTemplate>
										<TextBlock Text="New key" FontStyle="Italic" />
									</DataTemplate>
								</shared:HintProperties.HintTemplate>
							</TextBox>
						</DataTemplate>
					</sample:AddEntryPropertyModel.NameTemplate>
					<sample:AddEntryPropertyModel.ValueTemplate>
						<DataTemplate>
							<TextBox Text="{Binding ValueAsString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
									 Style="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedTextBoxStyleKey}}">
								<shared:HintProperties.HintTemplate>
									<DataTemplate>
										<TextBlock Text="Value" FontStyle="Italic" />
									</DataTemplate>
								</shared:HintProperties.HintTemplate>
							</TextBox>
						</DataTemplate>
					</sample:AddEntryPropertyModel.ValueTemplate>
				</sample:AddEntryPropertyModel>
			</grids:PropertyGrid.Properties>
		</grids:PropertyGrid>

	</Grid>

</sampleBrowser:ProductItemControl>
