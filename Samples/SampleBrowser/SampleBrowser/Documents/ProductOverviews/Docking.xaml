<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sampleBrowser="clr-namespace:ActiproSoftware.SampleBrowser"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:views="http://schemas.actiprosoftware.com/winfx/xaml/views"
	Style="{StaticResource DocumentPresenterStyle}">

	<views:InertiaScrollViewer>
		<StackPanel>

			<views:MultiColumnPanel ColumnMinWidth="420" Style="{StaticResource DocumentContentPanelStyle}">

				<Button Margin="0,0,0,20" Style="{StaticResource ScreenshotSoftButtonStyle}" HorizontalAlignment="Center"
						Command="{Binding NavigateViewToItemInfoCommand}" CommandParameter="https://ActiproSoftware/ProductSamples/DockingSamples/Demo/SimpleIde/MainControl">
					<shared:DynamicImage Width="400" Height="300">
						<shared:DynamicImage.Source>
							<BitmapImage UriSource="/Images/Screenshots/Docking-SimpleIde-400x300.png" shared:ImageProvider.CanAdapt="False" />
						</shared:DynamicImage.Source>
					</shared:DynamicImage>
				</Button>

				<TextBlock Style="{StaticResource DocumentParagraphTextBlockStyle}">
					Docking/MDI is a complete docking tool window and multiple document interface solution.
				</TextBlock>
				<TextBlock Style="{StaticResource DocumentParagraphTextBlockStyle}">
					End users can drag and dock windows wherever they please, and persist their layout customizations.
					The product contains docking window and MDI capabilities found in popular IDEs, and extended functionality that you won't find anywhere else.
					It's designed to fully support data-binding and use in MVVM applications, and can be easily integrated in Prism applications as well.
				</TextBlock>

				<Button Margin="0,0,0,20" Style="{StaticResource FeatureSummaryAccentButtonStyle}" HorizontalAlignment="Left" />

			</views:MultiColumnPanel>

			<Border BorderThickness="0,1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderLowerBrushKey}}"
					Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBackgroundLowerBrushKey}}">
				<StackPanel Style="{StaticResource DocumentContentPanelStyle}">
					<ItemsControl ItemsSource="{Binding ViewItemInfo.ProductFamily.GroupedItems}" Style="{StaticResource GroupedProductItemInfoItemsControlStyle}" />
				</StackPanel>
			</Border>

		</StackPanel>
	</views:InertiaScrollViewer>

</UserControl>
